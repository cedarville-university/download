      SUBROUTINE DLOSWRITE(PRINT.LINE, FLUSH.BUFFER)
*
* INFO/BASIC SUBROUTINE
* 11/27/90
* DWS
* TITLE ----- DLOSWRITE
*
*
* PURPOSE: WRITE A RECORD TO A "DIRECT" FILE (DIFFERENT FOR EACH OP.SYS VALUE)
*
*
*************************************************************************
* Stamped: p41 rotmand, /usr/local/download, user #1784, 21 Jun 07, 11:04AM.
* Version 7.21
*
*
*
*
*
*
*

      $INCLUDE IDLMAX
      $INCLUDE IDLMAIN
      $INCLUDE IDLOPSYS
      $INCLUDE IWHICHOPSYS
      $INCLUDE IWHICHDBMS


      DEBUG1OR2
      CRT 'INSIDE DLOSWRITE'
      END
      BEGIN CASE
         CASE DBMS.NAME = 'INFORMATION'
            GOSUB OP.SYS.PWRITE
         CASE DBMS.NAME = 'UNIDATA'
            GOSUB OP.SYS.UNIDATA.WRITE.FILE
         CASE DBMS.NAME = 'UNIVERSE'
            GOSUB OP.SYS.UNIVERSE.WRITE.FILE
      END CASE
      IF FLUSH.BUFFER THEN
         BEGIN CASE
            CASE DBMS.NAME = 'INFORMATION'
               GOSUB OP.SYS.PRIMOS.FLUSH.FILE
            CASE DBMS.NAME = 'UNIDATA'
               GOSUB OP.SYS.UNIDATA.FLUSH.FILE
            CASE DBMS.NAME = 'UNIVERSE'
               GOSUB OP.SYS.UNIVERSE.FLUSH.FILE
         END CASE
      END
      RETURN


OP.SYS.PWRITE: 
      OP.SYS.BUFFER := PRINT.LINE
      LOOP
         LEN.OP.SYS.BUFFER = LEN(OP.SYS.BUFFER)
      UNTIL LEN.OP.SYS.BUFFER < OP.SYS.BUFFER.SIZE
         BUFFER.TO.WRITE = OP.SYS.BUFFER[1,OP.SYS.BUFFER.SIZE]
         OP.SYS.BUFFER = OP.SYS.BUFFER[OP.SYS.BUFFER.SIZE+1,LEN.OP.SYS.BUFFER]
         WORDS.WRITTEN = 0
         WRITE.ERRMSG = ''
         WORDS.TO.WRITE = OP.SYS.BUFFER.SIZE / 2
         GOSUB OP.SYS.PRIMOS.WRITE.BUFFER
      REPEAT
      RETURN


OP.SYS.PRIMOS.WRITE.BUFFER: 
      WORDS.WRITTEN = 0
      WRITE.ERRMSG = ''
      CALL PWRITE(OP.SYS.FILE.FUNIT, WORDS.TO.WRITE, BUFFER.TO.WRITE, WORDS.WRITTEN, WRITE.ERRMSG)
      IF WRITE.ERRMSG THEN
         DLMAIN.ERRMSG<-1> = 'Can not write to "':OP.SYS.FILE.PATH.NAME:' for record "':@ID:'"'
         DLMAIN.ERRMSG<-1> = '   ':WRITE.ERRMSG
         DLMAIN.FATAL.ERROR = TRUE
      END ELSE
         IF WORDS.WRITTEN # WORDS.TO.WRITE THEN
            DLMAIN.ERRMSG<-1> = 'Error doing direct write to "':OP.SYS.FILE.PATH.NAME:'" for record "':@ID:'"'
            DLMAIN.ERRMSG<-1> = '   Expecting to write ':OP.SYS.BUFFER.SIZE:' characters but wrote ':(WORDS.WRITTEN*2):' characters.'
         END
      END
      RETURN


OP.SYS.UNIDATA.WRITE.FILE: 
      *UNIDATA      OSBWRITE PRINT.LINE ON OP.SYS.FILE.FUNIT AT OP.SYS.BUFFER.SIZE
      OP.SYS.BUFFER.SIZE += LEN(PRINT.LINE)
      RETURN


OP.SYS.UNIVERSE.WRITE.FILE: 
            SEND PRINT.LINE: TO OP.SYS.FILE.FUNIT ELSE
               NULL
            END
      RETURN


* FINISH UP WHATEVER IS IN THE BUFFER
*   IF THERE IS AN ODD NUMBER OF CHARACTERS LEFT TO WRITE,
*   PAD THE END WITH THE NULL CHARACTER 0
*
OP.SYS.PRIMOS.FLUSH.FILE: 
      LEN.OP.SYS.BUFFER = LEN(OP.SYS.BUFFER)
      BUFFER.TO.WRITE = OP.SYS.BUFFER
      WORDS.TO.WRITE = INT(LEN.OP.SYS.BUFFER / 2)
      IF (WORDS.TO.WRITE*2) # LEN.OP.SYS.BUFFER THEN
         OP.SYS.BUFFER := OP.SYS.CHAR.ZERO
         WORDS.TO.WRITE += 1
      END
      GOSUB OP.SYS.PRIMOS.WRITE.BUFFER
      RETURN


*
* EACH RECORD IS WRITTEN AS A BLOCK, NO BUFFERING OR FLUSHING
* IS NEEDED
*
OP.SYS.UNIDATA.FLUSH.FILE: 
      RETURN


OP.SYS.UNIVERSE.FLUSH.FILE: 
      RETURN


   END
