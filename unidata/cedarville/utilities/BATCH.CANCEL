*
* INFO/BASIC PROGRAM
* 5/18/89
* DWS
* TITLE ----- CONTROL.BATCH
*
*
* PURPOSE: LIST/MODIFY/CANCEL BATCH JOBS IN QUEUES
*           & CLEANUP VOC ITEMS "BATCH.##", & BATCH.xxx FILES
*
* Stamped: pty/ttyp2 rotmand, /disk1/collive, user #23157, 04 Jul 94, 08:27AM.
*     Last updated by LIVE (SJOQUIST) at 16:16:33 on 05/30/1989.
*
*************************************************************************
*

      $INCLUDE I_RS.COMMON
      $INCLUDE I_BATCH.COMMON

*
*
* MAIN CONTROL
*

      GOSUB SET.UP
ZZZZ
      FOR PARAM.CTR = STARTING.PARAM TO NUM.PARAMS
         JOB.NUMBER = OCONV(PARAM.STR<PARAM.CTR>,'MCL')
         GOSUB READ.JOB
         IF JOB.EXISTS THEN
            GOSUB VERIFY.USER.NAME
            IF USER.OKAY THEN
               GOSUB DELETE.JOB.PARAMETERS
               GOSUB CANCEL.JOB
            END ELSE
               CRT 'Job # ':JOB.NUMBER:' belongs to user ':USER.NAME
            END
         END ELSE
            CRT 'Job # ':JOB.NUMBER:' does not exist'
         END
      NEXT PARAM.CTR
      STOP



*
*
* SET UP
*
SET.UP: 
      COMMAND.LINE = @SENTENCE
      PARAM.STR = ''
      PARAM.QU = ''
      NUM.PARAMS = 0
      CALL PARSE.LINE(COMMAND.LINE,PARAM.STR,PARAM.QU,NUM.PARAMS)
      IF PARAM.STR<1> = 'RUN' THEN
         STARTING.PARAM = 4
      END ELSE
         STARTING.PARAM = 1
      END
*
*
      ON.ERROR.RETURN = ''
      ERRMSG = ''
      F.INFO.USERS = ''
      CALL OPEN.FILE(F.INFO.USERS,'INFO.USERS',ON.ERROR.RETURN,ERRMSG)
      RETURN



*
*
* READ JOB
*
READ.JOB: 
      VOC.ITEM = ''
      REMOTE.FILE = ''
      REMOTE.ITEM = ''
      JOB.EXISTS = 1
      READ AT.JOBS.REC FROM F.AT.JOBS, JOB.NAME ELSE
         AT.JOBS.REC = ''
         JOB.EXISTS = 0
      END
      F.VOC = ''
      LOCATE 'INFO' IN AT.JOBS.REC<1> SETTING INFO.POS THEN
         UFD.NAME = TRIM(AT.JOBS.REC<15>[137,40])
         ACCOUNT.NAME = FIELD(UFD.NAME,'>',COUNT(UFD.NAME,'>')+1,1)
         VOC.FILE.NAME = ACCOUNT.NAME:'.VOC'
         CALL OPEN.FILE(F.VOC,VOC.FILE.NAME,ON.ERROR.RETURN,ERRMSG)
         VOC.ITEM = AT.JOBS.REC<INFO.POS+1>
         READ VOC.REC FROM F.VOC, VOC.ITEM ELSE
            VOC.REC = ''
         END
         IF VOC.REC<1>[1,1] = 'R' THEN
            REMOTE.FILE = VOC.REC<2>
            REMOTE.ITEM = VOC.REC<3>
         END
      END
      NUM.FIELDS = COUNT(AT.JOBS.REC,@FM) + 1
      OWNER.USER.NAME = TRIM(AT.JOBS.REC<NUM.FIELDS>[4,32])
      RETURN


*
*
* VERIFY USER NAME
*
VERIFY.USER.NAME: 
      USER.NAME = @LOGNAME
      USER.OKAY = 0
      IF USER.NAME = OWNER.USER.NAME THEN
         USER.OKAY = 1
         RETURN
      END
*
* FIELD 11 IN "INFO.USERS" HAS THE NAMES OF THOSE USERS WHOSE JOBS THE
*   USER RUNNING THE PROGRAM MAY CANCEL
*
      READ INFO.USERS.REC FROM F.INFO.USERS, USER.NAME ELSE
         INFO.USERS.REC = ''
      END
      IF INFO.USERS.REC<11> = 'ALL' THEN
         USER.OKAY = 1
      END
      LOCATE OWNER.USER.NAME IN INFO.USERS.REC<11,1> SETTING POS THEN
         USER.OKAY = 1
         RETURN
         RETURN
      END
      RETURN


*
*
* DELETE JOB PARAMETERS
*
DELETE.JOB.PARAMETERS: 
      IF VOC.ITEM[1,6] = 'BATCH.' AND NUM(VOC.ITEM[7,99]) THEN
         CRT 'Deleting "':VOC.ITEM:'" from "':VOC.FILE.NAME:'"'
         DELETE F.VOC, VOC.ITEM
      END
      IF REMOTE.FILE = 'BATCH.PARAGRAPHS' THEN
         CRT 'Deleting "':REMOTE.ITEM:'" from "BATCH.PARAGRAPHS"'
         DELETE F.BATCH.PARAGRAPHS, REMOTE.ITEM
         CRT 'Deleting "':REMOTE.ITEM:'" from "BATCH.PARAMETERS"'
         DELETE F.BATCH.PARAMETERS, REMOTE.ITEM
         CRT 'Deleting "':REMOTE.ITEM:'" from "BATCH.PRINTERS"'
         DELETE F.BATCH.PRINTERS, REMOTE.ITEM
      END
      RETURN



*
*
* CANCEL JOB
*
CANCEL.JOB: 
      COMMAND = 'PJOB #':JOB.NUMBER:' -CANCEL'
      EXECUTE COMMAND
      RETURN

   END
