*
* INFO/BASIC PROGRAM
* 7/9/92
* DWS
* TITLE ----- MAKE.LISTS.UNIQUE
*
*
* PURPOSE: TAKE A LIST OF SAVEDLISTS (USE ORDER LISTED AS PRIORITY ORDER)
*            AND ELIMINATE DUPLICATES BETWEEN THE LISTS
*
*     Last updated by LIVE (SJOQUIST) at 08:28:44 on 07/09/1992.
*
*************************************************************************
*

      DIM WORK.FILE.REC(7)
      EQU WF.LIST.NAME TO WORK.FILE.REC(1)
      EQU WF.LIST.PRIORITY TO WORK.FILE.REC(2)
      EQU WF.KEY.PRIORITY TO WORK.FILE.REC(3)
      EQU WF.GENDER TO WORK.FILE.REC(4)
      EQU WF.SPOUSE TO WORK.FILE.REC(5)
      EQU WF.SPOUSE.GENDER TO WORK.FILE.REC(6)
      EQU WF.SPOUSE.LIST.PRIORITY TO WORK.FILE.REC(7)

      GOSUB INITIALIZE.KEYWORDS
      GOSUB GET.COMMAND.LINE.OPTIONS
      IF O.ERRMSG # '' THEN
         GOSUB DISPLAY.ERRORS
         STOP
      END

      GOSUB SET.UP
      GOSUB PROCESS.KEYWORDS
      CLEARFILE F.WORK.FILE
      GOSUB LOAD.LISTS
      IF USE.JOINT THEN
         GOSUB SET.SPOUSE.LIST.PRIORITY
         GOSUB REMOVE.JOINTS
      END
      GOSUB REBUILD.LISTS
      STOP


*
*
* SET UP KEYWORD INFO
*
INITIALIZE.KEYWORDS:
      I.KEYWORD.LIST = ''
      I.MIN.OCC.LIST = ''
      I.MAX.OCC.LIST = ''
      I.MIN.VAL.LIST = ''
      I.MAX.VAL.LIST = ''
      I.KEYWORD.LIST<1,1> = 'WORK.FILE'
      I.MIN.OCC.LIST<1,1> = 1
      I.MAX.OCC.LIST<1,1> = 1
      I.MIN.VAL.LIST<1,1> = 1
      I.MAX.VAL.LIST<1,1> = 1
      I.KEYWORD.LIST<1,2> = 'LISTS'
      I.MIN.OCC.LIST<1,2> = 1
      I.MAX.OCC.LIST<1,2> = 1
      I.MIN.VAL.LIST<1,2> = 1
      I.MAX.VAL.LIST<1,2> = ''
      I.KEYWORD.LIST<1,3> = 'JOINT'
      I.MIN.OCC.LIST<1,3> = ''
      I.MAX.OCC.LIST<1,3> = 1
      I.MIN.VAL.LIST<1,3> = 0
      I.MAX.VAL.LIST<1,3> = 0
      I.KEYWORD.LIST<1,4> = 'NO.JOINT'
      I.MIN.OCC.LIST<1,4> = ''
      I.MAX.OCC.LIST<1,4> = 1
      I.MIN.VAL.LIST<1,4> = 0
      I.MAX.VAL.LIST<1,4> = 0
      I.KEYWORD.RECORD.LIST = ''
      I.KEYWORD.RECORD.LIST<1> = I.KEYWORD.LIST
      I.KEYWORD.RECORD.LIST<2> = I.MIN.OCC.LIST
      I.KEYWORD.RECORD.LIST<3> = I.MAX.OCC.LIST
      I.KEYWORD.RECORD.LIST<4> = I.MIN.VAL.LIST
      I.KEYWORD.RECORD.LIST<5> = I.MAX.VAL.LIST

      I.MUTUALLY.EXCLUSIVE.LIST = ''
      I.MUTUALLY.EXCLUSIVE.LIST<1,1> = 'JOINT'
      I.MUTUALLY.EXCLUSIVE.LIST<1,2> = 'NO.JOINT'

      I.COREQUISITE.LIST = ''
      RETURN


*
*
* SET UP
*
SET.UP:
      USE.JOINT = @FALSE
      WORK.FILE = ''
      ON.ERROR.RETURN = @FALSE
      ERRMSG = ''
      F.ALUM.DEVS = ''
      CALL OPEN.FILE(F.ALUM.DEVS,'ALUM.DEVS',ON.ERROR.RETURN,ERRMSG)
      F.PEOPLE = ''
      CALL OPEN.FILE(F.PEOPLE,'PEOPLE',ON.ERROR.RETURN,ERRMSG)
      RETURN


*
*
* GET COMMAND.LINE & OPTIONS
*
GET.COMMAND.LINE.OPTIONS:
      O.PROGRAM.NAME = ''
      O.KEYWORD.RECORD.LIST = ''
      O.ERRMSG = ''
      CALL GET.KEYWORD.OPTIONS(O.PROGRAM.NAME, O.KEYWORD.RECORD.LIST, O.ERRMSG, I.KEYWORD.RECORD.LIST, I.MUTUALLY.EXCLUSIVE.LIST, I.COREQUISITE.LIST)
      O.KEYWORD.LIST = O.KEYWORD.RECORD.LIST<1>
      O.VALUES.LIST = O.KEYWORD.RECORD.LIST<2>
      NUM.O.KEYWORDS = COUNT(O.KEYWORD.LIST,@VM) + 1
*
* THE FIRST VALUE IN O.VALUES.LIST IS A LIST OF ITEMS ON THE COMMAND
* LINE NOT ASSOCIATED WITH A KEYWORD SEPARATED BY @SM
*
      SAVEDLISTS.LIST = O.VALUES.LIST<1,1>
      RETURN


*
*
* PROCESS KEYWORDS
*
PROCESS.KEYWORDS:
      FOR KW.CTR=2 TO NUM.O.KEYWORDS
         KEYWORD = O.KEYWORD.LIST<1,KW.CTR>
         VALUE.LIST = O.VALUES.LIST<1,KW.CTR>
         BEGIN CASE
            CASE KEYWORD = 'WORK.FILE'
               GOSUB PROCESS.KEYWORD.WORK.FILE
            CASE KEYWORD = 'LISTS'
               GOSUB PROCESS.KEYWORD.LISTS
            CASE KEYWORD = 'JOINT'
               GOSUB PROCESS.KEYWORD.JOINT
            CASE KEYWORD = 'NO.JOINT'
               GOSUB PROCESS.KEYWORD.NO.JOINT
         END CASE
      NEXT KW.CTR
      RETURN

*
*
* PROCESS.KEYWORD.WORK.FILE
*
PROCESS.KEYWORD.WORK.FILE:
      WORK.FILE = VALUE.LIST
      WORK.FILE.IS.SCRATCH = @FALSE
      CALL CHECK.FOR.SCRATCH.FILE(WORK.FILE.IS.SCRATCH, WORK.FILE)
      IF WORK.FILE.IS.SCRATCH THEN
         ON.ERROR.RETURN = @FALSE
         ERRMSG = ''
         F.WORK.FILE = ''
         CALL OPEN.FILE(F.WORK.FILE, WORK.FILE, ON.ERROR.RETURN, ERRMSG)
         F.DICT.WORK.FILE = ''
         CALL OPEN.FILE(F.DICT.WORK.FILE, 'DICT ':WORK.FILE, ON.ERROR.RETURN, ERRMSG)
         GOSUB MAKE.DICT.RECS
      END ELSE
         CRT '"':WORK.FILE:'" can not be used for a work file.'
         STOP
      END
      RETURN


*
*
* MAKE DICT RECS
*
MAKE.DICT.RECS:
      READV TEST FROM F.DICT.WORK.FILE, 'LIST.NAME', 0 ELSE
         DICT.REC = ''
         DICT.REC<1> = 'D'
         DICT.REC<2> = 1
         DICT.REC<5> = '30L'
         DICT.REC<6> = 'S'
         WRITE DICT.REC TO F.DICT.WORK.FILE, 'LIST.NAME'
      END
      READV TEST FROM F.DICT.WORK.FILE, 'LIST.PRIORITY', 0 ELSE
         DICT.REC = ''
         DICT.REC<1> = 'D'
         DICT.REC<2> = 2
         DICT.REC<5> = '10R'
         DICT.REC<6> = 'S'
         WRITE DICT.REC TO F.DICT.WORK.FILE, 'LIST.PRIORITY'
      END
      READV TEST FROM F.DICT.WORK.FILE, 'KEY.PRIORITY', 0 ELSE
         DICT.REC = ''
         DICT.REC<1> = 'D'
         DICT.REC<2> = 3
         DICT.REC<5> = '10R'
         DICT.REC<6> = 'S'
         WRITE DICT.REC TO F.DICT.WORK.FILE, 'KEY.PRIORITY'
      END
      READV TEST FROM F.DICT.WORK.FILE, 'GENDER', 0 ELSE
         DICT.REC = ''
         DICT.REC<1> = 'D'
         DICT.REC<2> = 4
         DICT.REC<5> = '1L'
         DICT.REC<6> = 'S'
         WRITE DICT.REC TO F.DICT.WORK.FILE, 'GENDER'
      END
      READV TEST FROM F.DICT.WORK.FILE, 'SPOUSE', 0 ELSE
         DICT.REC = ''
         DICT.REC<1> = 'D'
         DICT.REC<2> = 5
         DICT.REC<5> = '7L'
         DICT.REC<6> = 'S'
         WRITE DICT.REC TO F.DICT.WORK.FILE, 'SPOUSE'
      END
      READV TEST FROM F.DICT.WORK.FILE, 'SPOUSE.GENDER', 0 ELSE
         DICT.REC = ''
         DICT.REC<1> = 'D'
         DICT.REC<2> = 6
         DICT.REC<5> = '10R'
         DICT.REC<6> = 'S'
         WRITE DICT.REC TO F.DICT.WORK.FILE, 'SPOUSE.GENDER'
      END
      READV TEST FROM F.DICT.WORK.FILE, 'SPOUSE.LIST.PRIORITY', 0 ELSE
         DICT.REC = ''
         DICT.REC<1> = 'D'
         DICT.REC<2> = 7
         DICT.REC<5> = '10R'
         DICT.REC<6> = 'S'
         WRITE DICT.REC TO F.DICT.WORK.FILE, 'SPOUSE.LIST.PRIORITY'
      END
      RETURN


*
*
* PROCESS.KEYWORD.LISTS
*
PROCESS.KEYWORD.LISTS:
      SAVEDLISTS.LIST<1,1,-1> = VALUE.LIST
      CONVERT @SM TO @FM IN SAVEDLISTS.LIST
      NUM.SAVEDLISTS = COUNT(SAVEDLISTS.LIST,@FM) + 1
      RETURN


*
*
* PROCESS.KEYWORD.JOINT
*
PROCESS.KEYWORD.JOINT:
      USE.JOINT = @TRUE
      RETURN


*
*
* PROCESS.KEYWORD.NO.JOINT
*
PROCESS.KEYWORD.NO.JOINT:
      USE.NO.JOINT = @TRUE
      RETURN


*
*
* LOAD LISTS
*
LOAD.LISTS:
      CRT 'Loading lists...'
      FOR SAVEDLIST.CTR=1 TO NUM.SAVEDLISTS
         LIST.NAME = SAVEDLISTS.LIST<SAVEDLIST.CTR>
         COMMAND = 'GET.LIST ':LIST.NAME
         EXECUTE COMMAND
         DONE.LIST = @FALSE
         KEY.CTR = 0
         LOOP
            READNEXT KEY ELSE DONE.LIST = @TRUE
         UNTIL DONE.LIST
            IF USE.JOINT THEN
               GOSUB PROCESS.KEY.JOINT
            END ELSE
               GOSUB PROCESS.KEY.INDIVIDUAL
            END
         REPEAT
      NEXT SAVEDLIST.CTR
      RETURN

*
*
* PROCESS RECORD KEY OF A LIST IN INDIVIDUAL MODE
*
PROCESS.KEY.INDIVIDUAL:
      READV TEST FROM F.WORK.FILE, KEY, 0 THEN
         RETURN
      END
      KEY.CTR += 1
      MAT WORK.FILE.REC = ''
      WF.LIST.NAME = LIST.NAME
      WF.LIST.PRIORITY = SAVEDLIST.CTR
      WF.KEY.PRIORITY = KEY.CTR
      MATWRITE WORK.FILE.REC TO F.WORK.FILE, KEY
      RETURN

*
*
* PROCESS RECORD KEY OF A LIST IN JOINT MODE
*
PROCESS.KEY.JOINT:
      READV TEST FROM F.WORK.FILE, KEY, 0 THEN
         RETURN
      END
      MAT WORK.FILE.REC = ''
      KEY.CTR += 1
      WF.LIST.NAME = LIST.NAME
      WF.LIST.PRIORITY = SAVEDLIST.CTR
      WF.KEY.PRIORITY = KEY.CTR
      READV WF.GENDER FROM F.PEOPLE, KEY, 14 ELSE
         WF.GENDER = ''
      END
      READV WF.SPOUSE FROM F.ALUM.DEVS, KEY, 32 ELSE
         WF.SPOUSE = ''
      END
      IF WF.SPOUSE MATCHES "7N" THEN
         READV WF.SPOUSE.GENDER FROM F.PEOPLE, KEY, 14 ELSE
            WF.SPOUSE.GENDER = ''
         END
      END ELSE
         WF.SPOUSE.GENDER = ''
      END
      MATWRITE WORK.FILE.REC TO F.WORK.FILE, KEY
      RETURN


*
*
* SET SPOUSE.LIST.PRIORITY
*
SET.SPOUSE.LIST.PRIORITY:
      CRT 'Setting SPOUSE.LIST.PRIORITY field...'
      COMMAND = 'SELECT ':WORK.FILE:' WITH SPOUSE'
      EXECUTE COMMAND
      DONE.LIST = @FALSE
      LOOP
         READNEXT KEY ELSE DONE.LIST = @TRUE
      UNTIL DONE.LIST
         MATREAD WORK.FILE.REC FROM F.WORK.FILE, KEY ELSE
            MAT WORK.FILE.REC =''
         END
         READV WF.SPOUSE.LIST.PRIORITY FROM F.WORK.FILE, WF.SPOUSE, 2 THEN
            IF WF.SPOUSE.LIST.PRIORITY # '' THEN
               MATWRITE WORK.FILE.REC TO F.WORK.FILE, KEY
            END
         END
      REPEAT
      RETURN


*
*
* DISPLAY ERRORS
*
DISPLAY.ERRORS:
      HEADING O.PROGRAM.NAME:"'G'Error messages'L'"
      NUM.O.ERRMSG = COUNT(O.ERRMSG,@FM) + 1
      FOR ERR.CTR=1 TO NUM.O.ERRMSG
         CRT O.ERRMSG<ERR.CTR>
      NEXT ERR.CTR
      RETURN


*
*
* REMOVE JOINT NAMES FROM LISTS
*
REMOVE.JOINTS:
      CRT 'Selecting new lists...'
      COMMAND = 'SELECT ':WORK.FILE:' BY LIST.PRIORITY BY KEY.PRIORITY'
      EXECUTE COMMAND
      CRT 'Removing joint names...'
      DONE.LIST = @FALSE
      LOOP
         GOSUB GET.WORK.FILE.REC
      UNTIL DONE.LIST
         OKAY.TO.DELETE = @TRUE
         BEGIN CASE
            CASE WF.SPOUSE.LIST.PRIORITY = ''
               OKAY.TO.DELETE = @FALSE
            CASE WF.LIST.PRIORITY < WF.SPOUSE.LIST.PRIORITY
               OKAY.TO.DELETE = @FALSE
            CASE WF.LIST.PRIORITY = WF.SPOUSE.LIST.PRIORITY AND WF.GENDER = 'M'
               OKAY.TO.DELETE = @FALSE
         END CASE
         IF OKAY.TO.DELETE THEN
            DELETE F.WORK.FILE, KEY
         END
      REPEAT
      RETURN



*
*
* GET WORK.FILE REC
*
GET.WORK.FILE.REC:
      READNEXT KEY THEN
         MATREAD WORK.FILE.REC FROM F.WORK.FILE, KEY ELSE
            MAT WORK.FILE.REC = ''
         END
      END ELSE
         DONE.LIST = @TRUE
      END
      RETURN


*
*
* REBUILD LISTS
*
REBUILD.LISTS:
      FOR SAVEDLIST.CTR=1 TO NUM.SAVEDLISTS
         LIST.NAME = SAVEDLISTS.LIST<SAVEDLIST.CTR>
         COMMAND = ''
         COMMAND<-1> = 'SELECT ':WORK.FILE:' WITH LIST.NAME = "':LIST.NAME:'" BY KEY.PRIORITY'
         COMMAND<-1> = 'SAVE.LIST ':LIST.NAME
         EXECUTE COMMAND
      NEXT SAVEDLIST.CTR
      RETURN

   END
