*
* INFO/BASIC PROGRAM
* 3/22/90
* DLR
* TITLE ----- C26.USERS
*
*
* MODULE :
* PURPOSE: EMULATE INFORMATION 'USERS' COMMAND
*          BUT DISPLAY SERVER NAMES IN PLACE OF USER NAMES
*
* Stamped: pts_ta root, /datatel/live/collive, user #3736, 08 Jul 00, 03:20PM.
*  Unidata 5.1
* Stamped: pb rotmand, /disk1/collive, user #26976, 19 Sep 97, 10:25AM.
*   Fix bug in FILTER option (caused records to be missed)
*   Allow filtering on user number or process id
* Stamped: wd rotmand, /disk1/collive, user #9194, 17 Sep 97, 04:11PM.
*   Implement NO.PAGE option
*   Remove blank line after header
* Stamped: pty/ttyrd sjoquist, /disk1/collive, user #19530, 22 Jul 94, 08:26AM.
* display user no & user id
* Stamped: pty/ttyp8 sjoquist, /disk1/coltest, user #1336, 24 Jun 94, 01:33PM.
* Updated for HP-UX
*     Last updated by LIVE (SJOQUIST) at 13:26:45 on 06/06/1990.
* Mark current port with an "*" (as INFORMATION USERS does)
* Add BY NAME and BY UID and BY PID options
*     Last updated by LIVE (ROTMAN) at 08:21:55 on 03/22/1990.
*
*************************************************************************
*

      X.HAVE.UNIDATA.5.OR.HIGHER = @TRUE

      COMMAND.LINE = @SENTENCE
      GOSUB SET.UP
      GOSUB GET.USER.INFORMATION
      IF NUM.USERS.ENTERED > 0 THEN
         GOSUB FILTER.USERS
      END
      GOSUB SET.COLUMN.WIDTH
      BEGIN CASE
         CASE BY.KEYWORD = 'UID'
            GOSUB SORT.USERS.BY.UID
         CASE BY.KEYWORD = 'PID'
            GOSUB SORT.USERS.BY.PID
         CASE BY.KEYWORD = 'NAME'
            GOSUB SORT.USERS.BY.NAME
      END CASE
      GOSUB DISPLAY.INFORMATION
      STOP


*
*
*
SET.UP: 
      PORT = @USERNO
      ERROR.RET = ''
      ERROR.MSG = ''
      F.VOCLIB = ''
      CALL OPEN.FILE(F.VOCLIB,'VOCLIB',ERROR.RET,ERROR.MSG)
      NUM.PARAMS = 0
      PARAM.QUOTED = ''
      PARAM.STR = ''
      CALL PARSE.LINE(COMMAND.LINE,PARAM.STR,PARAM.QUOTED,NUM.PARAMS)
      BRIEF = @FALSE
      NO.PAGE = @FALSE
      NUM.COLUMNS = ''
      DISPLAY.SERVERS = @FALSE
      BY.KEYWORD = ''
      NUM.USERS.ENTERED = 0
      USERS.ENTERED.LIST = ''
      FOR WHICH.PARAM = 2 TO NUM.PARAMS
         PARAM = OCONV(PARAM.STR<WHICH.PARAM>,'MCU')
         KEYWORD.VALUE = ''
         CALL GET.KEYWORD.VALUE(KEYWORD.VALUE,PARAM)
         BEGIN CASE
            CASE KEYWORD.VALUE = 'NO.PAGE'
               NO.PAGE = @TRUE
            CASE KEYWORD.VALUE = 'BRIEF'
               BRIEF = @TRUE
            CASE KEYWORD.VALUE = 'BY'
               WHICH.PARAM += 1
               BY.KEYWORD = PARAM.STR<WHICH.PARAM>
               IF BY.KEYWORD = '' THEN
                  CRT PARAM:' must be followed by "NAME", "UID", or "PID"--ignored.'
               END
            CASE 1
               BEGIN CASE
                  CASE PARAM = 'SERVERS'
                     DISPLAY.SERVERS = @TRUE
                  CASE PARAM = 'NUM.COLUMNS'
                     WHICH.PARAM += 1
                     NUM.COLUMNS = PARAM.STR<WHICH.PARAM>
                     IF NUM.COLUMNS = '' OR NOT(NUM(NUM.COLUMNS)) OR NUM.COLUMNS < 1 THEN
                        CRT PARAM:' must be followed by a numeric item greater than 0--ignored.'
                        NUM.COLUMNS = ''
                     END
*
* ASSUME EVERYTHING ELSE IS A USER NAME
*
                  CASE 1
                     NUM.USERS.ENTERED += 1
                     USERS.ENTERED.LIST<-1> = PARAM.STR<WHICH.PARAM>
               END CASE
         END CASE
      NEXT WHICH.PARAM
      IF DISPLAY.SERVERS THEN
         NUM.COLUMNS = 1
      END
      IF BY.KEYWORD THEN
         IF BY.KEYWORD # 'NAME' AND BY.KEYWORD # 'UID' AND BY.KEYWORD # 'PID' THEN
            CRT 'BY ':BY.KEYWORD:' is not a valid sort option--ignored'
            BY.KEYWORD = ''
         END
      END
      RETURN


*
*
* GET CURRENT WIDTH OF TERMINAL & SET COLUMN WIDTH
*
SET.COLUMN.WIDTH: 
      TERMINAL.WIDTH = @CRTWIDE
*
      IF NUM.COLUMNS < 1 THEN
         IF TERMINAL.WIDTH > 80 THEN
            NUM.COLUMNS = 5
         END ELSE
            NUM.COLUMNS = 3
         END
      END
      COLUMN.WIDTH = INT(TERMINAL.WIDTH / NUM.COLUMNS)
      COLUMN.FMT = COLUMN.WIDTH:'L'
*
      MAX.NUM.ROWS = INT((NUM.USERS-1)/NUM.COLUMNS) + 1
      DIM NUM.ROWS(NUM.COLUMNS), COLUMN.OFFSET(NUM.COLUMNS)
      MAT NUM.ROWS = MAX.NUM.ROWS
      NUM.PARTIAL.COLUMNS = MAX.NUM.ROWS * NUM.COLUMNS - NUM.USERS
      FOR COLUMN.CTR=(NUM.COLUMNS - NUM.PARTIAL.COLUMNS + 1) TO NUM.COLUMNS
         NUM.ROWS(COLUMN.CTR) -= 1
      NEXT COLUMN.CTR
      COLUMN.OFFSET(1) = 0
      FOR COLUMN.CTR=2 TO NUM.COLUMNS
         COLUMN.OFFSET(COLUMN.CTR) = COLUMN.OFFSET(COLUMN.CTR-1) + NUM.ROWS(COLUMN.CTR-1)
      NEXT COLUMN.CTR
      RETURN


*
*
*
GET.USER.INFORMATION: 
      PCPERFORM 'finger' CAPTURING FINGER.TEXT
      NUM.FINGER.TEXT = COUNT(FINGER.TEXT,@FM) + 1
      FOUND.LOGIN = @FALSE
      WHICH.LINE = 0
      LOOP
      UNTIL FOUND.LOGIN OR WHICH.LINE >= NUM.FINGER.TEXT
         WHICH.LINE += 1
         IF FINGER.TEXT<WHICH.LINE>[1,5] = 'Login' THEN
            FOUND.LOGIN = @TRUE
         END
      REPEAT
*DLR*      NUM.UNIX.USERS = COUNT(FINGER.TEXT,@FM) - 1
      NUM.UNIX.USERS = NUM.FINGER.TEXT - WHICH.LINE

      EXECUTE 'LISTUSER' CAPTURING LU.TEXT
      MAX.LINE = LU.TEXT<4>
      MAX.UDT.USERS = TRIM(FIELD(MAX.LINE,CHAR(9),2,1))
      NUM.UDT.USERS = TRIM(FIELD(MAX.LINE,CHAR(9),5,1))
      NUM.SQL.USERS = TRIM(FIELD(MAX.LINE,CHAR(9),6,1))
      NUM.USERS = COUNT(LU.TEXT,@FM) - 6
      USERS.IN.UDT = ''
      LIST.SIZE = 0
      FOR UDT.CTR=1 TO NUM.USERS
         USER.LINE = LU.TEXT<UDT.CTR+6>
         IF TRIM(USER.LINE) # '' THEN
            IF X.HAVE.UNIDATA.5.OR.HIGHER THEN
               PID = TRIM(USER.LINE[8,5])
               UID = TRIM(USER.LINE[13,8])
               USRNAME = TRIM(USER.LINE[21,9])
               USRTYPE = TRIM(USER.LINE[49,8])
            END ELSE
               PID = TRIM(USER.LINE[6,7])
               UID = TRIM(USER.LINE[13,6])
               USRNAME = TRIM(USER.LINE[19,9])
               USRTYPE = TRIM(USER.LINE[28,8])
            END
            USE.USER = @TRUE
            IF DISPLAY.SERVERS THEN
               VOCLIB.KEY = USRNAME:'.':PID
               READV SERVER.NAME FROM F.VOCLIB, VOCLIB.KEY, 2 ELSE
                  SERVER.NAME = ''
               END
               IF SERVER.NAME = '' THEN
                  USE.USER = @FALSE
               END
            END
            IF USE.USER THEN
               LIST.SIZE += 1
               USERS.IN.UDT<LIST.SIZE,1> = UID
               USERS.IN.UDT<LIST.SIZE,2> = PID
               USERS.IN.UDT<LIST.SIZE,3> = USRNAME
            END
         END
      NEXT UDT.CTR
      NUM.USERS = LIST.SIZE
      RETURN


*
*
* FILTER.USERS
*
FILTER.USERS: 
      OLD.NUM.USERS = NUM.USERS
      OLD.USERS.IN.UDT = USERS.IN.UDT
      USERS.IN.UDT = ''
      NUM.USERS = 0
      FOR USER.CTR=1 TO OLD.NUM.USERS
         UID = OLD.USERS.IN.UDT<USER.CTR,1>
         PID = OLD.USERS.IN.UDT<USER.CTR,2>
         USER.NAME = OLD.USERS.IN.UDT<USER.CTR,3>
         FOR ENTERED.CTR=1 TO NUM.USERS.ENTERED
            TARGET.NAME = USERS.ENTERED.LIST<ENTERED.CTR>
            IF NUM(TARGET.NAME) THEN
               IF TARGET.NAME = UID OR TARGET.NAME = PID THEN
                  OLD.USERS.IN.UDT<USER.CTR,4> = 'Y'
               END
            END ELSE
               LEN.TARGET.NAME = LEN(TARGET.NAME)
               IF USER.NAME[1,LEN.TARGET.NAME] = TARGET.NAME THEN
                  OLD.USERS.IN.UDT<USER.CTR,4> = 'Y'
               END
            END
         NEXT ENTERED.CTR
      NEXT USER.CTR
      FOR USER.CTR=1 TO OLD.NUM.USERS
         IF OLD.USERS.IN.UDT<USER.CTR,4> = 'Y' THEN
            NUM.USERS += 1
            FOR CTR=1 TO 3
               USERS.IN.UDT<NUM.USERS,CTR> = OLD.USERS.IN.UDT<USER.CTR,CTR>
            NEXT CTR
         END
      NEXT USER.CTR
      RETURN


*
*
* SORT USERS BY NAME
*
SORT.USERS.BY.NAME: 
      USERS.ENTERED.LIST = ''
      UID.LIST = ''
      PID.LIST = ''
      FOR USER.CTR = NUM.USERS TO 1 STEP -1
         UID = USERS.IN.UDT<USER.CTR,1>
         PID = USERS.IN.UDT<USER.CTR,2>
         USER.NAME = USERS.IN.UDT<USER.CTR,3>
         LOCATE USER.NAME IN USERS.ENTERED.LIST<1> BY "AL" SETTING POS ELSE NULL
         INS USER.NAME BEFORE USERS.ENTERED.LIST<POS>
         INS UID BEFORE UID.LIST<POS>
         INS PID BEFORE PID.LIST<POS>
      NEXT USER.CTR
      GOSUB MAKE.NEW.LIST
      RETURN


*
*
* SORT USERS BY PID
*
SORT.USERS.BY.PID: 
      USERS.ENTERED.LIST = ''
      UID.LIST = ''
      PID.LIST = ''
      FOR USER.CTR=1 TO NUM.USERS
         UID = USERS.IN.UDT<USER.CTR,1>
         PID = USERS.IN.UDT<USER.CTR,2>
         USER.NAME = USERS.IN.UDT<USER.CTR,3>
         LOCATE PID IN PID.LIST<1> BY "AR" SETTING POS ELSE NULL
         INS USER.NAME BEFORE USERS.ENTERED.LIST<POS>
         INS UID BEFORE UID.LIST<POS>
         INS PID BEFORE PID.LIST<POS>
      NEXT USER.CTR
      GOSUB MAKE.NEW.LIST
      RETURN


*
*
* SORT USERS BY UID
*
SORT.USERS.BY.UID: 
      USERS.ENTERED.LIST = ''
      UID.LIST = ''
      PID.LIST = ''
      FOR USER.CTR=1 TO NUM.USERS
         UID = USERS.IN.UDT<USER.CTR,1>
         PID = USERS.IN.UDT<USER.CTR,2>
         USER.NAME = USERS.IN.UDT<USER.CTR,3>
         LOCATE UID IN UID.LIST<1> BY "AR" SETTING POS ELSE NULL
         INS USER.NAME BEFORE USERS.ENTERED.LIST<POS>
         INS UID BEFORE UID.LIST<POS>
         INS PID BEFORE PID.LIST<POS>
      NEXT USER.CTR
      GOSUB MAKE.NEW.LIST
      RETURN


*
*
* MAKE NEW LIST
*
MAKE.NEW.LIST: 
      USER.CTR = 0
      FOR ROW.CTR=1 TO MAX.NUM.ROWS UNTIL USER.CTR > NUM.USERS
         FOR COLUMN.CTR=1 TO NUM.COLUMNS UNTIL USER.CTR > NUM.USERS
            USER.CTR += 1
            NEW.USER.CTR = ROW.CTR + COLUMN.OFFSET(COLUMN.CTR)
            USERS.IN.UDT<USER.CTR,3> = USERS.ENTERED.LIST<NEW.USER.CTR>
            USERS.IN.UDT<USER.CTR,1> = UID.LIST<NEW.USER.CTR>
            USERS.IN.UDT<USER.CTR,2> = PID.LIST<NEW.USER.CTR>
         NEXT COLUMN.CTR
      NEXT ROW.CTR
      RETURN



*
*
*
DISPLAY.INFORMATION: 
      IF NO.PAGE THEN
         BPIOCP
      END
      TITLE.LINE = FMT(OCONV(@TIME,'MTH'),'10L')
      TITLE.LINE := 'User counts:'
      TITLE.LINE := '  Unidata ':NUM.UDT.USERS
      TITLE.LINE := ' (max. ':MAX.UDT.USERS:')'
      TITLE.LINE := '   UniSQL ':NUM.SQL.USERS
      TITLE.LINE := '    Unix ':NUM.UNIX.USERS
*
      IF BRIEF THEN
         CRT TITLE.LINE.1
         RETURN
      END
      CRT TITLE.LINE
      HEADING.HALF = "UID. PID.. User............................  "
      IF NUM.COLUMNS > 1 THEN
         HEADING.HALF = HEADING.HALF[1,COLUMN.WIDTH-2]:'  '
      END
      TITLE.LINE.1 = ''
      FOR COLUMN.CTR=1 TO NUM.COLUMNS
         TITLE.LINE.1 := HEADING.HALF
      NEXT COLUMN.CTR
      CRT TITLE.LINE.1[1,TERMINAL.WIDTH-1]

      FOR WHICH.ID = 1 TO NUM.USERS STEP NUM.COLUMNS
         DETAIL.LINE = ''
         FOR COLUMN.CTR=1 TO NUM.COLUMNS
            WHICH.FIELD = WHICH.ID + COLUMN.CTR - 1
            UID = USERS.IN.UDT<WHICH.FIELD,1>
            PID = USERS.IN.UDT<WHICH.FIELD,2>
            USER.NAME = USERS.IN.UDT<WHICH.FIELD,3>
            IF WHICH.FIELD <= NUM.USERS THEN
               COLUMN.LINE = ''
               COLUMN.LINE := FMT(UID,'4R')
               COLUMN.LINE := ' '
               COLUMN.LINE := FMT(PID,'5R')
               IF PID = PORT THEN
                  COLUMN.LINE := '*'
               END ELSE
                  COLUMN.LINE := ' '
               END
               VOCLIB.KEY = USER.NAME:'.':PID
               READ VOCLIB.REC FROM F.VOCLIB, VOCLIB.KEY ELSE
                  VOCLIB.REC = ''
               END
               IF DISPLAY.SERVERS THEN
                  SERVER.NAME = VOCLIB.REC<2>
                  SERVER.DATE = VOCLIB.REC<3>
                  SERVER.TIME = VOCLIB.REC<4>
                  SERVER.CMDLINE = VOCLIB.REC<5>
                  COLUMN.LINE := FMT(USER.NAME,'12L')
                  COLUMN.LINE := FMT(SERVER.NAME,'15L')
                  COLUMN.LINE := FMT(OCONV(SERVER.DATE,'D2/'),'9L')
                  COLUMN.LINE := FMT(OCONV(SERVER.TIME,'MTH'),'9L')
                  COLUMN.LINE := SERVER.CMDLINE
               END ELSE
                  SERVER.NAME = VOCLIB.REC<2>
                  IF SERVER.NAME THEN
                     USER.NAME := '/':SERVER.NAME
                  END
                  COLUMN.LINE := USER.NAME
               END
               DETAIL.LINE := FMT(COLUMN.LINE,COLUMN.FMT)[1,COLUMN.WIDTH-2]:'  '
            END
         NEXT COLUMN.CTR
         CRT TRIMB(DETAIL.LINE)
      NEXT WHICH.ID
      RETURN


   END
