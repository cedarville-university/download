*
* INFO/BASIC PROGRAM
* 3/23/90
* DWS
* TITLE ----- VIEW.RECORDS
*
*
* PURPOSE: VIEW LIST OF RECORDS (AS SHOW), BUT ALLOW OTHER OPTIONS
*          SUCH AS LIST.RECORDS, FDUMP, VIEW.FILE
*
* Stamped: pty/ttys3 rotmand, /disk1/collive, user #20271, 02 Mar 95, 01:06PM.
* Allow 'view' option for multiple records
* Add 'Fdump' option
* Stamped: pty/ttyp4 rotmand, /disk1/collive, user #18834, 15 Jul 94, 11:27AM.
*     Last updated by LIVE (SJOQUIST) at 10:22:51 on 03/23/1990.
*
*
*************************************************************************
*
*  This program is provided 'as is' for your use by ROTMAN & SJOQUIST.
*  You are encouraged to verify the accuracy of program functions prior
*  to use with actual data files.
*
*  If you have questions about this program, or if you wish to obtain
*  a list of programs available for purchase from ROTMAN & SJOQUIST,
*  contact Dave Rotman or Doug Sjoquist:
*
*      Rotman and Sjoquist
*      c/o Cedarville College
*      PO Box 601
*      Cedarville, OH 45314
*      (513) 766-2211
*
*************************************************************************
*

      $INCLUDE SYSCOM FILEINFO.INS.IBAS
      $INCLUDE LOCAL.SOURCE I_C26.STANDARD


      GOSUB SET.UP
      GOSUB GET.SELECT.LIST
      GOSUB MAIN.LOOP
      STOP




*
*
* SET UP
*
SET.UP: 
      PROMPT ''
      GOSUB GET.TERMINAL.WIDTH
      END.PARAM = 2
      FIRST.DATA.LINE = 3
      NUM.PER.PAGE = 18
      COMMAND.LINE = OCONV(@SENTENCE,'MCU')
      PARAM.QUOTED = ''
      PARAM.STR = ''
      NUM.PARAMS = 0
      CALL PARSE.LINE(COMMAND.LINE,PARAM.STR,PARAM.QUOTED,NUM.PARAMS)
      IF PARAM.STR<1> = 'RUN' THEN
         STARTING.PARAM = 4
      END ELSE
         STARTING.PARAM = 2
      END
      IF NUM.PARAMS < STARTING.PARAM THEN
         CRT
         CRT 'You must specify a file name on the command line'
         CRT
         STOP
      END
      FILE.NAME = PARAM.STR<STARTING.PARAM>
      IF FILE.NAME = 'DICT' THEN
         HAVE.DICT = @TRUE
         STARTING.PARAM += 1
         FILE.NAME = 'DICT ':PARAM.STR<STARTING.PARAM>
      END ELSE
         HAVE.DICT = @FALSE
      END
      CURRENT.PARAM = STARTING.PARAM + 1
      ON.ERROR.RETURN = @FALSE
      ERRMSG = ''
      F.INFO = ''
      CALL OPEN.FILE(F.INFO, FILE.NAME, ON.ERROR.RETURN, ERRMSG)
      F.VOC = ''
      CALL OPEN.FILE(F.VOC, 'VOC', ON.ERROR.RETURN, ERRMSG)
      F.DICT = ''
      IF HAVE.DICT THEN
         CALL OPEN.FILE(F.DICT, 'DICT.DICT', ON.ERROR.RETURN, ERRMSG)
      END ELSE
         CALL OPEN.FILE(F.DICT, 'DICT ':FILE.NAME, ON.ERROR.RETURN, ERRMSG)
      END
      MAX.FIELDS = 99
      DIM FIELD.NAME(MAX.FIELDS)
      DIM FIELD.WIDTHS(MAX.FIELDS)
      DIM FIELD.DICT.REC(MAX.FIELDS)
      DIM FIELD.TYPE(MAX.FIELDS)
      GOSUB LOAD.DISPLAY.FIELDS
      FILE.TYPE = FILEINFO(F.INFO, FINFO$TYPE)
      FILE.IS.TYPE.1 = (FILE.TYPE = 4)
      DEFAULT.CHOICE = 'V'
      CHOICE.PROMPT = '(V)iew, (C)lear, (P)age, (S)elect, (D)efault, (F)dump, (H)elp, (E)xit: '
      VALID.CHOICES = 'V,C,P,S,D,F,H,E,Q'
      CONVERT ',' TO @FM IN VALID.CHOICES
      RETURN


*
*
* LOAD FIELDS TO DISPLAY
*
LOAD.DISPLAY.FIELDS: 
      GOSUB BUILD.FIELD.NAME.LIST
      DISPLAY.WIDTH = 4
      DISPLAY.HEADING = SPACE(DISPLAY.WIDTH)
      NUM.IN.LIST = COUNT(FIELD.NAME.LIST, @FM) + 1
      FIELD.CTR = 1
      LOOP
         FIELD.TO.CHECK = FIELD.NAME.LIST<FIELD.CTR>
         BEGIN CASE
            CASE FIELD.TO.CHECK = 'ID.SUP'
               DEL FIELD.NAME.LIST<FIELD.CTR>
               NUM.IN.LIST -= 1
               LOCATE '@ID' IN FIELD.NAME.LIST<1> SETTING POS THEN
                  DEL FIELD.NAME.LIST<POS>
                  NUM.IN.LIST -= 1
               END
            CASE FIELD.TO.CHECK = 'BY' OR FIELD.TO.CHECK = 'BY.DSND'
               DEL FIELD.NAME.LIST<POS>
               DEL FIELD.NAME.LIST<POS>
               NUM.IN.LIST -= 2
            CASE 1
               FIELD.CTR += 1
         END CASE
      UNTIL FIELD.CTR >= NUM.IN.LIST
      REPEAT

      FOR FIELD.CTR = 1 TO NUM.IN.LIST UNTIL DISPLAY.WIDTH >= TERMINAL.WIDTH
         FIELD.TO.ADD = FIELD.NAME.LIST<FIELD.CTR>
         GOSUB LOAD.FIELD
      NEXT FIELD.CTR
      RETURN


*
*
* BUILD FIELD NAME LIST
*
BUILD.FIELD.NAME.LIST: 
      FIELD.NAME.LIST = ''
      FIELD.TO.ADD = '@ID'
      FIELD.NAME.LIST<-1> = FIELD.TO.ADD
      IF NUM.PARAMS = STARTING.PARAM THEN
         PHRASE.NAME = '@'
         READV TEST FROM F.DICT, PHRASE.NAME, 0 THEN
            GOSUB LOAD.PHRASE
         END
      END ELSE
         FOR PARAM.CTR = STARTING.PARAM + 1 TO NUM.PARAMS
            FIELD.TO.ADD = PARAM.STR<PARAM.CTR>
            READV TYPE FROM F.DICT, FIELD.TO.ADD, 1 ELSE
               TYPE = ''
            END
            BEGIN CASE
               CASE FIELD.TO.ADD = 'ID.SUP'
                  LOCATE '@ID' IN FIELD.NAME.LIST<1> SETTING POS THEN
                     DEL FIELD.NAME.LIST<POS>
                  END
               CASE TYPE[1,2] = 'PH'
                  PHRASE.NAME = FIELD.TO.ADD
                  GOSUB LOAD.PHRASE
               CASE 1
                  FIELD.NAME.LIST<-1> = FIELD.TO.ADD
            END CASE
         NEXT PARAM.CTR
      END
      NUM.FIELDS = 0
      RETURN


*
*
* LOAD PHRASE
*
LOAD.PHRASE: 
      READV PHRASE.LIST FROM F.DICT, PHRASE.NAME, 2 THEN
         PHRASE.LIST = TRIM(PHRASE.LIST)
         NUM.IN.PHRASE = COUNT(PHRASE.LIST,' ') + 1
         FOR PHRASE.CTR=1 TO NUM.IN.PHRASE
            FIELD.TO.ADD = FIELD(PHRASE.LIST,' ',PHRASE.CTR,1)
            FIELD.NAME.LIST<-1> = FIELD.TO.ADD
         NEXT PHRASE.CTR
      END
      RETURN



*
*
* LOAD FIELD
*
LOAD.FIELD: 
      READ DICT.REC FROM F.DICT, FIELD.TO.ADD ELSE
         CRT '"':FIELD.TO.ADD:'" NOT FOUND IN "DICT" "':FILE.NAME:'"'
         STOP
      END
      TYPE = DICT.REC<1,1>[1,1]
      IF TYPE = 'I' OR TYPE = 'D' THEN
         IF TYPE = 'I' AND DICT.REC<8> = '' THEN
            EXECUTE 'CD ':FILE.NAME:' ':FIELD.TO.ADD CAPTURING CD.TEXT
            READ DICT.REC FROM F.DICT, FIELD.TO.ADD ELSE 
               CRT
               CRT '"':FIELD.TO.ADD:'" NOT FOUND IN "DICT" "':FILE.NAME:'"'
               STOP
            END
         END
         NUM.FIELDS += 1
         FIELD.NAME(NUM.FIELDS) = FIELD.TO.ADD
         FIELD.DICT.REC(NUM.FIELDS) = DICT.REC
         FIELD.TYPE(NUM.FIELDS) = TYPE
         FMT.CODE = DICT.REC<5>
         FIELD.WIDTH = LEN(FMT('', FMT.CODE))
         FIELD.WIDTHS(NUM.FIELDS) = FIELD.WIDTH
         DISPLAY.HEADING := ' ':FMT(FIELD.TO.ADD,FIELD.WIDTH:'L')[1,FIELD.WIDTH]
         DISPLAY.WIDTH += FIELD.WIDTH
      END
      RETURN


*
*
* GET CURRENT WIDTH OF TERMINAL
*
GET.TERMINAL.WIDTH: 
      TERMINAL.WIDTH = @CRTWIDE - 1
      RETURN




*
*
* READ SELECT LIST
*
GET.SELECT.LIST: 
      READLIST RECORD.LIST ELSE
         SELECT F.INFO
         READLIST RECORD.LIST ELSE RECORD.LIST = ''
      END
      CONVERT @IM TO @FM IN RECORD.LIST
      NUM.RECORDS = COUNT(RECORD.LIST,@FM) + (RECORD.LIST # '')
      SELECTED.RECORDS = ''
      NUM.SELECTED = 0
      RETURN



*
*
* PROCESS PAGE
*
MAIN.LOOP: 
      MAX.PAGES = INT((NUM.RECORDS-1)/NUM.PER.PAGE) + 1
      CUR.PAGE = 1
      PREV.PAGE = 1

      GOSUB DISPLAY.PAGE
      DONE.VIEW = @FALSE
      LOOP
         GOSUB GET.CHOICE
         BEGIN CASE
            CASE CHOICE = 'Q' OR CHOICE = 'E' OR CHOICE = 'END'
               DONE.VIEW = @TRUE
            CASE CHOICE = 'V' OR CHOICE = 'F'
               GOSUB PROCESS.VIEW
            CASE CHOICE = 'C'
               GOSUB PROCESS.CLEAR
            CASE CHOICE = 'S'
               GOSUB PROCESS.SELECT
            CASE CHOICE = 'H'
               GOSUB PRINT.HELP
               GOSUB DISPLAY.PAGE
            CASE CHOICE = 'P'
               CHOICE.NUM = TRIM(CHOICE.OPTIONS)
               IF CHOICE.NUM = '' THEN
                  PROMPT.MSG = 'Page'
                  GOSUB GET.CHOICE.NUM
               END
               IF CHOICE.NUM >= 1 AND CHOICE.NUM <= MAX.PAGES THEN
                  CUR.PAGE = CHOICE.NUM
                  GOSUB DISPLAY.PAGE
               END
            CASE CHOICE = ''
               CUR.PAGE += 1
               IF CUR.PAGE > MAX.PAGES THEN
                  CUR.PAGE = 1
               END
               IF CUR.PAGE # PREV.PAGE THEN
                  GOSUB DISPLAY.PAGE
               END
            CASE CHOICE = 'D'
               GOSUB PROCESS.DEFAULT
            CASE 1
               NULL
         END CASE
         PREV.PAGE = CUR.PAGE
      UNTIL DONE.VIEW
      REPEAT
      IF NUM.SELECTED THEN
         GOSUB GENERATE.ACTIVE.SELECT.LIST
      END
      RETURN



PROCESS.VIEW: 
      RETURN.LIST = ''
      CALL HYPHENS.TO.NUMBERS(RETURN.LIST,CHOICE.OPTIONS)
      COUNT.RETURN.LIST = COUNT(RETURN.LIST,@VM) + (RETURN.LIST#'')
      FOR WHICH.ONE = 1 TO COUNT.RETURN.LIST
         ENTRY.TO.VIEW = RETURN.LIST<1,WHICH.ONE>
         IF NUM(ENTRY.TO.VIEW) THEN
            REC.TO.VIEW = BEG.REC.CTR + ENTRY.TO.VIEW - 1
            IF REC.TO.VIEW <= NUM.RECORDS THEN
               GOSUB PROCESS.RECORD
            END
         END
      NEXT WHICH.ONE
      RETURN



*
*
* PROCESS.RECORD
*
PROCESS.RECORD: 
      RECORD.NAME = RECORD.LIST<REC.TO.VIEW>
      IF FILE.IS.TYPE.1 THEN
         IF RECORD.NAME[1,1] = '_' OR CHOICE = 'F' THEN
            GOSUB PROCESS.FDUMP
         END ELSE
            GOSUB PROCESS.VIEW.FILE
         END
      END ELSE
         GOSUB PROCESS.LIST.RECORDS
      END
      RETURN


PROCESS.CLEAR: 
      IF CHOICE.OPTIONS = 'A' THEN
         SELECTED.RECORDS = ''
         NUM.SELECTED = 0
         CHOICE.OPTIONS = '1-':NUM.PER.PAGE
      END
      IF CHOICE.OPTIONS = 'V' THEN
         CHOICE.OPTIONS = '1-':NUM.PER.PAGE
      END
      RETURN.LIST = ''
      CALL HYPHENS.TO.NUMBERS(RETURN.LIST,CHOICE.OPTIONS)
      COUNT.RETURN.LIST = COUNT(RETURN.LIST,@VM) + (RETURN.LIST#'')
      FOR WHICH.ONE = 1 TO COUNT.RETURN.LIST
         ENTRY.TO.CLEAR = RETURN.LIST<1,WHICH.ONE>
         IF NUM(ENTRY.TO.CLEAR) THEN
            REC.TO.CLEAR = BEG.REC.CTR + ENTRY.TO.CLEAR - 1
            IF REC.TO.CLEAR <= NUM.RECORDS THEN
               IF SELECTED.RECORDS<REC.TO.CLEAR> # '' THEN
                  NUM.SELECTED -= 1
               END
               SELECTED.RECORDS<REC.TO.CLEAR> = ''
               CRT @(3,FIRST.DATA.LINE + ENTRY.TO.CLEAR - 1):'|':
            END
         END
      NEXT WHICH.ONE
      GOSUB DISPLAY.HEADING.2
      RETURN


PROCESS.DEFAULT: 
      IF CHOICE.OPTIONS THEN
         DEFAULT.CHOICE = CHOICE.OPTIONS
      END ELSE
         CALL PROMPT.ANS(DEFAULT.CHOICE,'DEFAULT CHOICE',0,22,'',DEFAULT.CHOICE,END.PARAM)
      END
      RETURN



PROCESS.SELECT: 
      IF CHOICE.OPTIONS = 'A' THEN
         FOR WHICH.ONE = 1 TO NUM.RECORDS
            SELECTED.RECORDS<WHICH.ONE> = '1'
         NEXT WHICH.ONE
         NUM.SELECTED = NUM.RECORDS
         CHOICE.OPTIONS = '1-':NUM.PER.PAGE
      END
      IF CHOICE.OPTIONS = 'V' THEN
         CHOICE.OPTIONS = '1-':NUM.PER.PAGE
      END
      RETURN.LIST = ''
      CALL HYPHENS.TO.NUMBERS(RETURN.LIST,CHOICE.OPTIONS)
      COUNT.RETURN.LIST = COUNT(RETURN.LIST,@VM) + (RETURN.LIST#'')
      FOR WHICH.ONE = 1 TO COUNT.RETURN.LIST
         ENTRY.TO.SELECT = RETURN.LIST<1,WHICH.ONE>
         IF NUM(ENTRY.TO.SELECT) THEN
            REC.TO.SELECT = BEG.REC.CTR + ENTRY.TO.SELECT - 1
            IF REC.TO.SELECT <= NUM.RECORDS THEN
               IF SELECTED.RECORDS<REC.TO.SELECT> = '' THEN
                  NUM.SELECTED += 1
               END
               SELECTED.RECORDS<REC.TO.SELECT> = '1'
               CRT @(3,FIRST.DATA.LINE + ENTRY.TO.SELECT - 1):'*':
            END
         END
      NEXT WHICH.ONE
      GOSUB DISPLAY.HEADING.2
      RETURN


*
*
* PROCESS VIEW.FILE
*
PROCESS.VIEW.FILE: 
      COMMAND.LINE = 'VIEW.FILE ':FILE.NAME:' ':RECORD.NAME
      EXECUTE COMMAND.LINE
      GOSUB DISPLAY.PAGE
      RETURN



*
*
* PROCESS LIST.RECORDS
*
PROCESS.LIST.RECORDS: 
      COMMAND.LINE = 'LIST.RECORDS ':FILE.NAME:' DICT ':RECORD.NAME
      EXECUTE COMMAND.LINE
      CRT 'Press <RETURN> to continue...':
      INPUT ANS
      GOSUB DISPLAY.PAGE
      RETURN

*
*
* PROCESS FDUMP
*
PROCESS.FDUMP: 
      READV PATH.NAME FROM F.VOC, FILE.NAME, 2 ELSE
         PATH.NAME = '.'
      END
      COMMAND.LINE = 'FDUMP ':PATH.NAME:'/':RECORD.NAME
      EXECUTE COMMAND.LINE
      GOSUB DISPLAY.PAGE
      RETURN


*
*
* GET COMMAND
*
GET.CHOICE: 
      CRT @(0,22):CHOICE.PROMPT:CLEAR.EOL:
      INPUT ANS
      ANS = OCONV(ANS,'MCU')
      CHOICE = ANS[1,1]
      CHOICE.OPTIONS = TRIM(ANS[2,999])
      IF ANS = '' THEN
         CHOICE = ''
      END ELSE
         LOCATE CHOICE IN VALID.CHOICES<1> SETTING POS ELSE
            CHOICE = DEFAULT.CHOICE
            CHOICE.OPTIONS = TRIM(ANS)
         END
      END
      RETURN


*
*
* GET CHOICE.NUM
*
GET.CHOICE.NUM: 
      VALID.ANSWERS = ''
      DEFAULT.ANSWER = ''
      CHOICE.NUM = ''
      CALL PROMPT.ANS(CHOICE.NUM,PROMPT.MSG,0,22,VALID.ANSWERS,DEFAULT.ANSWER,END.PARAM)
      RETURN


*
*
* RECALC PAGE NUMBER
*
RECALC.PAGE.NO: 
      CUR.PAGE = INT((REC.CTR-1)/NUM.PER.PAGE) + 1
      RETURN


*
*
* DISPLAY PAGE
*
DISPLAY.PAGE: 
      GOSUB DISPLAY.HEADING.1
      GOSUB DISPLAY.HEADING.2
      GOSUB DISPLAY.HEADING.3
      BEG.REC.CTR = (CUR.PAGE-1)*NUM.PER.PAGE + 1
      END.REC.CTR = BEG.REC.CTR + NUM.PER.PAGE - 1
      FOR REC.CTR=BEG.REC.CTR TO END.REC.CTR UNTIL REC.CTR > NUM.RECORDS
         IF SELECTED.RECORDS<REC.CTR> = '' THEN
            PRINT.LINE = FMT(REC.CTR-BEG.REC.CTR+1,'3R'):'|'
         END ELSE
            PRINT.LINE = FMT(REC.CTR-BEG.REC.CTR+1,'3R'):'*'
         END
         @ID = RECORD.LIST<REC.CTR>
         GOSUB READ.RECORD
         FOR FIELD.CTR=1 TO NUM.FIELDS
            FIELD.LOC = FIELD.DICT.REC(FIELD.CTR)<2>
            CONV.CODE = FIELD.DICT.REC(FIELD.CTR)<3>
            FMT.CODE = FIELD.DICT.REC(FIELD.CTR)<5>
            BEGIN CASE
               CASE NOT(RECORD.FOUND)
                  DATA.ITEM = '(record not found)'
               CASE FIELD.TYPE(FIELD.CTR) = 'D' AND FIELD.LOC = '0'
                  DATA.ITEM = @ID
               CASE FIELD.TYPE(FIELD.CTR) = 'D'
                  DATA.ITEM = @RECORD<FIELD.LOC>
               CASE FIELD.TYPE(FIELD.CTR) = 'I'
                  DATA.ITEM = ITYPE(FIELD.DICT.REC(FIELD.CTR))
               CASE 1
                  DATA.ITEM = ''
            END CASE
            IF RECORD.FOUND THEN
               IF CONV.CODE THEN
                  DATA.ITEM = OCONV(DATA.ITEM,CONV.CODE)
               END
               PRINT.LINE := ' ':FMT(DATA.ITEM,FMT.CODE)[1,FIELD.WIDTHS(FIELD.CTR)]
            END ELSE
               PRINT.LINE := ' ':DATA.ITEM
            END
         NEXT FIELD.CTR
         PRINT.LINE = PRINT.LINE[1,TERMINAL.WIDTH]
         CRT @(0,FIRST.DATA.LINE+REC.CTR-BEG.REC.CTR):PRINT.LINE:
      NEXT REC.CTR
      RETURN



DISPLAY.HEADING.1: 
      HEADING.LINE.1 = 'View.Records ':FILE.NAME
      SPACE.COUNT = TERMINAL.WIDTH - LEN(HEADING.LINE.1) - 20
      IF SPACE.COUNT > 0 THEN
         HEADING.LINE.1 := SPACE(SPACE.COUNT)
      END
      HEADING.LINE.1 := ' ':OCONV(DATE(),'D2/'):' ':OCONV(TIME(),'MTHS')
      CRT CLEAR.SCREEN:HEADING.LINE.1
      RETURN


DISPLAY.HEADING.2: 
      HEADING.LINE.2 = 'Page ':CUR.PAGE:' of ':MAX.PAGES
      RIGHT.TEXT = NUM.SELECTED:' records selected'
      SPACE.COUNT = TERMINAL.WIDTH - LEN(HEADING.LINE.2) - LEN(RIGHT.TEXT)
      HEADING.LINE.2 := SPACE(SPACE.COUNT):RIGHT.TEXT
      CRT @(0,1):HEADING.LINE.2:
      RETURN


DISPLAY.HEADING.3: 
      CRT @(0,2):DISPLAY.HEADING:
      RETURN


*
*
* READ RECORD
*
READ.RECORD: 
      READ @RECORD FROM F.INFO, @ID THEN
         RECORD.FOUND = @TRUE
      END ELSE
         RECORD.FOUND = @FALSE
         @RECORD = ''
      END
      RETURN


GENERATE.ACTIVE.SELECT.LIST: 
      NEW.LIST = ''
      FOR WHICH.ONE = 1 TO NUM.RECORDS
         IF SELECTED.RECORDS<WHICH.ONE> # '' THEN
            NEW.LIST<-1> = RECORD.LIST<WHICH.ONE>
         END
      NEXT WHICH.ONE
      FORMLIST NEW.LIST
      CRT NUM.SELECTED:' record(s) in active select list.'
      RETURN


PRINT.HELP: 
      PRINT CLEAR.SCREEN
      BPIOCP
      PRINT
      PRINT 'Enter a number to view the corresponding record.'
      PRINT 'Example:'
      PRINT '     13       will show you record 13'
      PRINT
      PRINT 'To select records, enter the letter "S" followed by the record number.'
      PRINT 'Examples:'
      PRINT '     S13      will select record 13'
      PRINT '     S5-8     will select records 5 through 8'
      PRINT '     SA       will select all records'
      PRINT '     SALL     will select all records'
      PRINT '     SV       will select those records visible on the screen'
      PRINT '     SVIS     will select those records visible on the screen'
      PRINT
      PRINT 'To clear the selection of records, use the letter "C".'
      PRINT 'Examples:'
      PRINT '     C13      will clear record 13'
      PRINT '     C5-8     will clear records 5 through 8'
      PRINT '     CA       will clear all records'
      PRINT '     CALL     will clear all records'
      PRINT '     CV       will clear those records visible on the screen'
      PRINT '     CVIS     will clear those records visible on the screen'
      PRINT
      PRINT 'To jump to a particular page, enter "P" and the page number.'
      PRINT 'Examples:'
      PRINT '     P3       will jump to page 3'
      PRINT
      PRINT 'Pressing the return key will get you to the next page.'
      PRINT
      PRINT 'Enter "E" when you wish to exit the program.'
      PRINT
      MSG = ''
      CALL LINE.22(MSG)
      RETURN


   END
