*
* 3/7/88
* SJH
* TITLE ------ MORT
*
* AMORTIZATION PROGRAM
*
*
*
*     Last updated by LIVE (HOWDER) at 10:08:28 on 08/09/1989.
* SHOW DUE DATE FOR EACH PAYMENT PERIOD
*     LAST UPDATED BY LIVE (HOWDER) AT 01:08:48 ON 07/07/1988.
* ALLOW SPECIFIC MONTHLY PAYMENTS
*     LAST UPDATED BY LIVE (HOWDER) AT 03:27:59 ON 07/06/1988.
* PRINT TO FORM 'BAMORT'
*     Last updated by LIVE (ROTMAN) at 09:21:09 on 05/20/1988.
* PRINT BANNER PAGE ON PRINTED OUTPUT
* ALLOW MULTIPLE REQUESTS PER RUN
* LEAVE PROMPT AT BOTTOM OF DISPLAY ON EXIT
*     LAST UPDATED BY LIVE (HOWDER) AT 4:00:00 ON 3/7/88
*
*
*
*
*************************************************************************
*
*  This program is provided 'as is' for your use by ROTMAN & SJOQUIST.
*  You are encouraged to verify the accuracy of program functions prior
*  to use with actual data files.
*
*  If you have questions about this program, or if you wish to obtain
*  a list of programs available for purchase from ROTMAN & SJOQUIST,
*  contact Dave Rotman or Doug Sjoquist:
*
*      Rotman and Sjoquist
*      c/o Cedarville College
*      PO Box 601
*      Cedarville, OH 45314
*      (513) 766-2211
*
*************************************************************************
*
      CLEAR.SCREEN = @(-1)
      CLEAR.EOS = @(-3)
      CLEAR.EOL = @(-4)
      PROMPT ''
      PRECISION.VALUE = 6
      PRECISION PRECISION.VALUE
      APR.FMT = '14R':PRECISION.VALUE-3
      RATE.FMT = '14R':PRECISION.VALUE-1

*
* MAIN
*
      QUITTING = 0
      LOOP
         GOSUB PAINT.INITIAL.SCREEN
         GOSUB GET.INFO
      UNTIL QUITTING
         IF PARAMETER.COUNT < 3 THEN
            PRINT @(0,22):'INSUFFICIENT DATA...  [NL] TO CONTINUE: ':
            INPUT JUNK
         END ELSE
            IF PARAMETER.COUNT > 3 THEN
               NUM.PAY = ''
            END
            GOSUB CALCULATE.MISSING.ITEM
            TOT.AMT.PAID=PERIODIC.PAYMENT*NUM.PAY
            TOT.INT.PAID=TOT.AMT.PAID-AMT
            GOSUB PRINT.RESULTS
            GOSUB ASK.METHOD
            IF CHOICE # '4' THEN
               GOSUB GET.START.DATE
            END
            PRINTER CLOSE               ;* RE-ENABLE SCREEN PAUSE
            BEGIN CASE
               CASE CHOICE='1'
                  GOSUB AMORT.SCREEN
                  GOSUB PAUSE.IT
               CASE CHOICE='2'
                  GOSUB AMORT.PRINT
               CASE CHOICE='3'
                  GOSUB AMORT.SCREEN
                  GOSUB AMORT.PRINT
                  GOSUB PAUSE.IT
               CASE 1
                  NULL
            END CASE
         END
      REPEAT
      PRINT @(0,15):CLEAR.EOS
      STOP
*
* PAUSE AT BOTTOM OF SCREEN
*
PAUSE.IT:
      PRINT @(0,22):'[NL] TO CONTINUE: ':
      INPUT JUNK
      RETURN
*
*  PAINT INITIAL SCREEN
*
PAINT.INITIAL.SCREEN:
      PRINT @(0,0):CLEAR.EOS
      PRINT @(26,0):"AMORTIZATION SCHEDULE"
      PRINT @(0,2):"AMOUNT OF LOAN:"
      PRINT @(0,3):"DOLLAR AMOUNT PER PAYMENT:"
      PRINT @(0,4):"NUMBER OF LOAN PAYMENTS:"
      PRINT @(0,5):"NUMBER OF PAYMENTS IN A YEAR [12]:"
      PRINT @(0,6):"ANNUAL PERCENTAGE RATE:"
      PRINT @(20,10):"JUST PRESS [NL] FOR THE ITEM TO BE CALCULATED."
      PRINT @(20,11):"TYPE 'END' AT ANY LINE TO QUIT."
      RETURN
*
*  GET INFO
*
GET.INFO:
      PARAMETER.COUNT = 0
      GOSUB GET.AMT
      IF QUITTING THEN
         RETURN
      END
      GOSUB GET.PERIODIC.PAYMENT
      IF QUITTING THEN
         RETURN
      END
      GOSUB GET.NUM.PAY
      IF QUITTING THEN
         RETURN
      END
      GOSUB GET.NUM.PAY.YEAR
      IF QUITTING THEN
         RETURN
      END
      GOSUB GET.APR.PCT
      RETURN





GET.AMT:
      LOOP
         PRINT @(36,2):CLEAR.EOL:@(36):
         INPUT AMT
         TEMP.AMT = AMT
         GOSUB VALIDATE.AMT
      UNTIL OKAY
      REPEAT
      IF NOT(QUITTING) THEN
         FMT.AMT=FMT(AMT,"14R2$,")
         PRINT @(36,2):FMT.AMT
         IF AMT # '' THEN
            PARAMETER.COUNT+=1
         END
      END
      RETURN


GET.PERIODIC.PAYMENT:
      LOOP
         PRINT @(36,3):CLEAR.EOL:@(36):
         INPUT PERIODIC.PAYMENT
         TEMP.AMT = PERIODIC.PAYMENT
         GOSUB VALIDATE.AMT
      UNTIL OKAY
      REPEAT
      IF NOT(QUITTING) THEN
         FMT.PERIODIC.PAYMENT=FMT(PERIODIC.PAYMENT,"14R2$,")
         PRINT @(36,3):FMT.PERIODIC.PAYMENT
         IF PERIODIC.PAYMENT # '' THEN
            PARAMETER.COUNT+=1
         END
      END
      RETURN


GET.NUM.PAY:
      LOOP
         PRINT @(36,4):CLEAR.EOL:@(36):
         INPUT NUM.PAY
         TEMP.AMT = NUM.PAY
         GOSUB VALIDATE.AMT
      UNTIL OKAY
      REPEAT
      IF NOT(QUITTING) THEN
         FMT.NUM.PAY=FMT(NUM.PAY,"14R")
         PRINT @(36,4):FMT.NUM.PAY
         IF NUM.PAY # '' THEN
            PARAMETER.COUNT+=1
         END
      END
      RETURN


GET.NUM.PAY.YEAR:
      LOOP
         PRINT @(36,5):CLEAR.EOL:@(36):
         INPUT NUM.PAY.YEAR
         IF NUM.PAY.YEAR='' THEN
            NUM.PAY.YEAR=12
         END
         TEMP.AMT = NUM.PAY.YEAR
         GOSUB VALIDATE.AMT
      UNTIL OKAY
      REPEAT
      IF NOT(QUITTING) THEN
         FMT.NUM.PAY.YEAR=FMT(NUM.PAY.YEAR,"14R")
         PRINT @(36,5):FMT.NUM.PAY.YEAR
      END
      RETURN


GET.APR.PCT:
      LOOP
         PRINT @(36,6):CLEAR.EOL:@(36):
         INPUT APR.PCT
         TEMP.AMT = APR.PCT
         GOSUB VALIDATE.AMT
      UNTIL OKAY
      REPEAT
      IF NOT(QUITTING) THEN
         PRINT @(36,6):FMT(APR.PCT,APR.FMT)
         IF APR.PCT # '' THEN
            PARAMETER.COUNT+=1
         END
      END
      RETURN



VALIDATE.AMT:
      IF TEMP.AMT = '' THEN
         OKAY = 1
      END ELSE
         IF NUM(TEMP.AMT) THEN
            IF TEMP.AMT >= 0 THEN
               OKAY=1
            END ELSE
               OKAY=0
            END
         END ELSE
            TEMP.AMT = OCONV(TEMP.AMT,'MCU')
            IF TEMP.AMT='END' THEN
               OKAY = 1
               QUITTING = 1
            END ELSE
               OKAY=0
            END
         END
      END
      RETURN


*
* CALCULATE THE MISSING ITEM
*
CALCULATE.MISSING.ITEM:
      BEGIN CASE
         CASE AMT = ''
            GOSUB CALCULATE.AMT
         CASE PERIODIC.PAYMENT = ''
            GOSUB CALCULATE.PERIODIC.PAYMENT
         CASE NUM.PAY = ''
            GOSUB CALCULATE.NUM.PAY
         CASE 1
            GOSUB CALCULATE.APR
      END CASE
      RETURN



CALCULATE.AMT:
      APR=APR.PCT/100
      RATE.PER.PERIOD=APR/NUM.PAY.YEAR
      IF RATE.PER.PERIOD > 0 THEN
         AMT = PERIODIC.PAYMENT*((1.0-(1.0+RATE.PER.PERIOD)^(-NUM.PAY))/RATE.PER.PERIOD)
      END ELSE
         AMT = PERIODIC.PAYMENT*NUM.PAY
      END
      AMT = INT(100*AMT+0.5)/100
      FMT.AMT=FMT(AMT,"14R2$,")
      PRINT @(36,2):FMT.AMT
      RETURN



CALCULATE.PERIODIC.PAYMENT:
      APR=APR.PCT/100
      RATE.PER.PERIOD=APR/NUM.PAY.YEAR
      IF RATE.PER.PERIOD > 0 THEN
         PERIODIC.PAYMENT=AMT/((1.0-(1.0+RATE.PER.PERIOD)^(-NUM.PAY))/RATE.PER.PERIOD)
      END ELSE
         PERIODIC.PAYMENT = AMT/NUM.PAY
      END
      PERIODIC.PAYMENT = INT(100*PERIODIC.PAYMENT+0.5)/100
      FMT.PERIODIC.PAYMENT=FMT(PERIODIC.PAYMENT,"14R2$,")
      PRINT @(36,3):FMT.PERIODIC.PAYMENT
      RETURN



CALCULATE.NUM.PAY:
      APR=APR.PCT/100
      RATE.PER.PERIOD=APR/NUM.PAY.YEAR
      IF RATE.PER.PERIOD > 0 THEN
         NUM.PAY=-LN(1-AMT*RATE.PER.PERIOD/PERIODIC.PAYMENT)/LN(1+RATE.PER.PERIOD)
      END ELSE
         NUM.PAY = AMT / PERIODIC.PAYMENT
      END
      NUM.PAY = INT(NUM.PAY+0.5)
      FMT.NUM.PAY=FMT(NUM.PAY,"14R")
      PRINT @(36,4):FMT.NUM.PAY
      RETURN



CALCULATE.APR:
* WE APPROXIMATE THE INTEREST RATE RATHER THAN SOLVING A VERY DIFFICULT
* EQUATION FOR THE RATE

      OLD.I = 0.1
      OLD.X = AMT*OLD.I/(1-(1+OLD.I)**(-NUM.PAY))
      IF OLD.X > PERIODIC.PAYMENT THEN
         NEW.I=OLD.I/2
      END ELSE
         NEW.I=NEW.I*2
      END
      NEW.X = AMT*NEW.I/(1-(1+NEW.I)**(-NUM.PAY))


      LOOP.COUNT=0
      LOOP
         NEW.X = AMT*NEW.I/(1-(1+NEW.I)**(-NUM.PAY))
      UNTIL ABS(NEW.X-PERIODIC.PAYMENT)<0.00005 OR ABS(OLD.I-NEW.I)<0.000001 OR LOOP.COUNT > 200
         LOOP.COUNT+=1
         IF OLD.X < PERIODIC.PAYMENT THEN
            IF NEW.X < PERIODIC.PAYMENT THEN
               OLD.I = NEW.I
               NEW.I = 1.001*(NEW.X/PERIODIC.PAYMENT)*NEW.I
            END ELSE
               TEMP=OLD.I
               OLD.I = NEW.I
               NEW.I = (TEMP+NEW.I)/2
            END
         END ELSE
            IF NEW.X < PERIODIC.PAYMENT THEN
               TEMP=OLD.I
               OLD.I = NEW.I
               NEW.I = (TEMP+NEW.I)/2
            END ELSE
               OLD.I = NEW.I
               NEW.I = 0.999*(PERIODIC.PAYMENT/NEW.X)*NEW.I
            END
         END
         OLD.X = NEW.X
      REPEAT
      RATE.PER.PERIOD = NEW.I
      APR = 12*RATE.PER.PERIOD
      APR.PCT = 100*APR

      PRINT @(36,6):FMT(APR.PCT,APR.FMT):" (APPROXIMATED)"

      RETURN



PRINT.RESULTS:
      PRINT @(0,8):"PERIODIC RATE FOR ":NUM.PAY.YEAR:" PAYMENTS PER YEAR:":CLEAR.EOS
      PRINT @(50,8):FMT(RATE.PER.PERIOD,RATE.FMT)
      PRINT @(0,9):"PERIODIC PAYMENT FOR ":NUM.PAY.YEAR:" PAYMENTS PER YEAR:"
      PRINT @(50,9):FMT(PERIODIC.PAYMENT,"14R2$,")
      PRINT @(0,10):"TOTAL AMOUNT OF PAYMENTS:"
      PRINT @(50,10):FMT(TOT.AMT.PAID,"14R2$,")
      PRINT @(0,11):"TOTAL AMOUNT OF INTEREST:"
      PRINT @(50,11):FMT(TOT.INT.PAID,"14R2$,")
      RETURN

*
* METHOD OF OUTPUT FOR THE AMORTIZATION
*
ASK.METHOD:
      PRINT @(10,13):"ACTION DESIRED:"
      PRINT @(20,14):"1. SCREEN OUTPUT ONLY"
      PRINT @(20,15):"2. PRINT OUTPUT ONLY"
      PRINT @(20,16):"3. SCREEN AND PRINT OUTPUT"
      PRINT @(20,17):"4. ENTER NEW FIGURES"
      PRINT @(25,19):"YOUR CHOICE [1]:"
      PRINT @(10,21):"TYPE 'END' TO QUIT"
      LOOP
         PRINT @(42,19):CLEAR.EOL:@(42):
         INPUT CHOICE
         CHOICE = OCONV(CHOICE,'MCU')
      UNTIL CHOICE = 'END' OR CHOICE = '' OR CHOICE = '1' OR CHOICE = '2' OR CHOICE = '3' OR CHOICE = '4'
      REPEAT
      IF CHOICE='END' THEN
         PRINT
         PRINT
         PRINT
         STOP
      END
      IF CHOICE='' THEN
         CHOICE = 1
      END
      RETURN


GET.START.DATE:
      PRINT @(0,21):CLEAR.EOS:
      PRINT @(10,21):"ENTER STARTING DATE: "
      LOOP
         PRINT @(31,21):CLEAR.EOL:@(31):
         INPUT START.DATE
         START.DATE = ICONV(START.DATE,"D4/")
         CONVERT.STATUS = STATUS()
      UNTIL START.DATE = '' OR START.DATE = 'END' OR NOT(CONVERT.STATUS)
      REPEAT
      IF START.DATE = '' OR START.DATE = 'END' THEN
         PRINT
         PRINT
         STOP
      END
      RETURN



*
* DO AMORTIZATION
*
AMORT.SCREEN:
      PAYMENT.DATE = ''
      TOT.WORK.PMT=0
      TOT.WORK.PRIN=0
      TOT.WORK.INT=0
      TOT.YEAR.PMT=0
      TOT.YEAR.PRIN=0
      TOT.YEAR.INT=0
      WORK.PERIOD=1
      WORK.BALANCE=AMT
      INCREMENTOR = 12/NUM.PAY.YEAR
      MONTHS.TO.ADD = 0
      YEAR.NUM=1
      NEXT.TOTAL.PERIOD = NUM.PAY.YEAR
      HH = "'C'MORTGAGE AMORTIZATION'LL'"
      HH := "INITIAL AMOUNT ":FMT.AMT:"'L'"
      HH := "INTEREST RATE  ":FMT(APR.PCT,APR.FMT):"'L'"
      HH := "NUMBER OF PMTS ":FMT(NUM.PAY,"14R"):"'L'"
      HH := "'L'PERIOD DUE DATE         PAYMENT       PRINCIPAL        INTEREST         BALANCE"
      HEADING HH
      OUT.REC=SPACE(65)
      OUT.REC:=FMT(WORK.BALANCE,"14R2,")
      PRINT OUT.REC
      CALL ADD.MONTHS(PAYMENT.DATE,START.DATE,0)
* MAIN PROCESSING LOOP
      LOOP
         WORK.INT=INT(100*WORK.BALANCE*RATE.PER.PERIOD+0.5)/100
         IF WORK.PERIOD = NUM.PAY THEN
            WORK.PRIN = WORK.BALANCE
            WORK.PMT = WORK.PRIN + WORK.INT
         END ELSE
            WORK.PRIN=PERIODIC.PAYMENT-WORK.INT
            WORK.PMT = PERIODIC.PAYMENT
         END
         WORK.BALANCE-=WORK.PRIN
         OUT.REC=SPACE(1)
         OUT.REC:=FMT(WORK.PERIOD,"4R")
         OUT.REC:=SPACE(2)
         OUT.REC:=FMT(OCONV(PAYMENT.DATE,"D2/"),"8R")
         OUT.REC:=SPACE(2)
         OUT.REC:=FMT(WORK.PMT,"14R2,")
         OUT.REC:=SPACE(2)
         OUT.REC:=FMT(WORK.PRIN,"14R2,")
         OUT.REC:=SPACE(2)
         OUT.REC:=FMT(WORK.INT,"14R2,")
         OUT.REC:=SPACE(2)
         OUT.REC:=FMT(WORK.BALANCE,"14R2,")
         PRINT OUT.REC
         PREVIOUS.DATE = PAYMENT.DATE
         MONTHS.TO.ADD += INCREMENTOR
         CALL ADD.MONTHS(PAYMENT.DATE,START.DATE,MONTHS.TO.ADD)
         TOT.YEAR.PMT+=WORK.PMT
         TOT.YEAR.PRIN+=WORK.PRIN
         TOT.YEAR.INT+=WORK.INT
         TOT.WORK.PMT+=WORK.PMT
         TOT.WORK.PRIN+=WORK.PRIN
         TOT.WORK.INT+=WORK.INT
         IF WORK.PERIOD >= NEXT.TOTAL.PERIOD THEN
            GOSUB DISPLAY.YEARLY.TOTALS
            TOT.YEAR.PMT=0
            TOT.YEAR.PRIN=0
            TOT.YEAR.INT=0
            YEAR.NUM+=1
            NEXT.TOTAL.PERIOD=NUM.PAY.YEAR*YEAR.NUM
         END
         WORK.PERIOD+=1
      UNTIL WORK.PERIOD>NUM.PAY
      REPEAT
      IF TOT.YEAR.PMT#0 THEN
         GOSUB DISPLAY.YEARLY.TOTALS
      END
      VALUE.ONE=TOT.WORK.PMT
      VALUE.TWO=TOT.WORK.PRIN
      VALUE.THREE=TOT.WORK.INT
      PRINT STR('-',80)
      OUT.REC='TOTALS'
      OUT.REC:=SPACE(11)
      GOSUB PRINT.TOTALS
      PRINT STR('=',80)
      RETURN



***************************************************************************
*
***************************************************************************
DISPLAY.YEARLY.TOTALS:
      VALUE.ONE=TOT.YEAR.PMT
      VALUE.TWO=TOT.YEAR.PRIN
      VALUE.THREE=TOT.YEAR.INT
      PRINT STR('-',80)
      OUT.REC="YEAR ":FMT(YEAR.NUM,"R3"):" TOTALS"
      NUM.SPACES=17-LEN(OUT.REC)
      OUT.REC:=SPACE(NUM.SPACES)
      GOSUB PRINT.TOTALS
      IF WORK.PERIOD<=NUM.PAY THEN
         PRINT
      END
      RETURN



PRINT.TOTALS:
      OUT.REC:=FMT(VALUE.ONE,"14R2,")
      OUT.REC:=SPACE(2)
      OUT.REC:=FMT(VALUE.TWO,"14R2,")
      OUT.REC:=SPACE(2)
      OUT.REC:=FMT(VALUE.THREE,"14R2,")
      PRINT OUT.REC
      RETURN

AMORT.PRINT:
      FORM.NAME = 'BAMORT'
*****   SET.PRINTER CALL

      SETPTR.OPTIONS = ""
      SETPTR.OPTIONS<1> = "SETPTR ,80,,0,0,,NFMT,NHEAD"
      SETPTR.OPTIONS<2> = FORM.NAME
      CALL SET.PRINTER(SETPTR.OPTIONS)

      PRINTER ON
      GOSUB AMORT.SCREEN
      PRINTER OFF
      RETURN




   END
