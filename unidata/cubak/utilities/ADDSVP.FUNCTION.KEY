*
* INFO/BASIC PROGRAM
* 3/16/88
* DWS
* TITLE ----- ADDSVP.FUNCTION.KEY
*
*
* PURPOSE: SET THE VALUE OF A FUNCTION.KEY FOR THE ADDS TERMINALS
*
*
*     Last updated by LIVE (ROTMAN) at 10:22:53 on 09/08/1989.
* Check term.type so we don't lock up a terminal like the VT101
*     Last updated by LIVE (SJOQUIST) at 13:31:07 on 03/16/1988.
*
*************************************************************************
*
*
*
*************************************************************************
*
*  This program is provided 'as is' for your use by ROTMAN & SJOQUIST.
*  You are encouraged to verify the accuracy of program functions prior
*  to use with actual data files.
*
*  If you have questions about this program, or if you wish to obtain
*  a list of programs available for purchase from ROTMAN & SJOQUIST,
*  contact Dave Rotman or Doug Sjoquist:
*
*      Rotman and Sjoquist
*      c/o Cedarville College
*      PO Box 601
*      Cedarville, OH 45314
*      (513) 766-2211
*
*************************************************************************
*


*
*
* COMMAND LINE SYNTAX
*
*  RUN CC.SOURCE ADDSVP.FUNCTION.KEY key# "keytext" {key# "keytext"}
*
*
* KEY #        DESCRIPTION
*   1-16     FUNCTION KEYS 1-16
*  17-32     SHIFTED FUNCTION KEYS 1-16
*  33-36     HOME/CHAR/LINE/CLR                      (TOP RIGHT OF KEYBOARD)
*  37-40     ARROW KEY ROW                           (KEYPAD)
*  41-44     7/8/9/-                                 (KEYPAD)
*  45-48     4/5/6/,                                 (KEYPAD)
*  49-51     1,2,3                                   (KEYPAD)
*  52-53     0/.                                     (KEYPAD)
*  54        <ENTER>                                 (KEYPAD)
*  55        <ESC>                                   (MAIN KEYBOARD)
*  56        <BKSP>                                  (MAIN KEYBOARD)
*  57        <TAB>                                   (MAIN KEYBOARD)
*  58        <RETURN> ON MAIN KEYBOARD               (MAIN KEYBOARD)
*  59        <PRINT SEND>                            (LEFT SIDE)
*  60        SHIFTED <INS/REPL>                      (LEFT SIDE)
*  61-64    *SHIFTED * UNDEFINED **
*  65-68     SHIFTED HOME/CHAR/LINE/CLR              (TOP RIGHT OF KEYBOARD)
*  69-72     SHIFTED ARROW KEY ROW                   (KEYPAD)
*  73-76     SHIFTED 7/8/9/-                         (KEYPAD)
*  77-80     SHIFTED 4/5/6/,                         (KEYPAD)
*  81-83     SHIFTED 1,2,3                           (KEYPAD)
*  84-85     SHIFTED 0/.                             (KEYPAD)
*  86        SHIFTED <ENTER>                         (KEYPAD)
*  87        SHIFTED <ESC>                           (MAIN KEYBOARD)
*  88        SHIFTED <BKSP>                          (MAIN KEYBOARD)
*  89        SHIFTED <TAB>                           (MAIN KEYBOARD)
*  90        SHIFTED <RETURN> ON MAIN KEYBOARD       (MAIN KEYBOARD)
*  91        <PRINT SEND>                            (LEFT SIDE)
*  92        <INS/REPL>                              (LEFT SIDE)
*
* DATATEL'S ENVISION USES KEYS 1-36 & 65-68 (ALL TOP ROW & SHIFTED TOP ROW)
* SO WE CAN'T USE THESE
* MUST SPECIFY "KEY ##/OK 'KEY VALUE'" TO USE THESE KEYS
*


      VALID.TERM.LIST = 'ad'


      COMMAND.LINE = @SENTENCE


      EXECUTE 'HUSH ON'
      EXECUTE 'GET.TERM.TYPE'
      TERM.TYPE.STRING = @SYSTEM.RETURN.CODE
      EXECUTE 'HUSH OFF'

      TERM.TYPE = TERM.TYPE.STRING<1,1>
TERM.TYPE = SYSTEM(7)
      LOCATE TERM.TYPE IN VALID.TERM.LIST<1,1> SETTING POS ELSE
         PRINT 'ADDSVP.FUNCTION.KEY ignored for terminal type ':TERM.TYPE:'.'
         RETURN
      END


      PARAM = ''
      PARAM.QUOTED = ''
      NUM.PARAMS = 0
      CALL PARSE.LINE(COMMAND.LINE,PARAM,PARAM.QUOTED,NUM.PARAMS)
*
*  KEY #'S /VALUES ARE IN PAIRS
*
      FOR IPARAM=2 TO NUM.PARAMS STEP 2
         KEY.NUMBER = FIELD(PARAM<IPARAM>,'/',1,1)
         KEY.FLAG = FIELD(PARAM<IPARAM>,'/',2,1)
         BEGIN CASE
            CASE KEY.NUMBER < 1
               KEY.OK = 0
            CASE KEY.NUMBER < 37
               IF KEY.FLAG = 'OK' THEN
                  KEY.OK = 1
               END ELSE
                  KEY.OK = 0
               END
            CASE KEY.NUMBER < 61
               KEY.OK = 1
            CASE KEY.NUMBER < 65
               KEY.OK = 0
            CASE KEY.NUMBER < 69
               IF KEY.FLAG = 'OK' THEN
                  KEY.OK = 1
               END ELSE
                  KEY.OK = 0
               END
            CASE KEY.NUMBER < 93
               KEY.OK = 1
            CASE 1
               KEY.OK = 0
         END CASE
         IF KEY.OK THEN
            KEY.VALUE = PARAM<IPARAM+1>
*
*
*
* THE PARAMETERS FOR THE LOADING OF THE FUNCTION KEY ARE:
*   1. CHAR(KEY.NUMBER-1)   : WHICH FUNCTION KEY
*   2. CHAR(1)              : SENDS TEXT TO EIA PORT
*   3. 'n'                   : No link
*
* LINK TO #126 (DOWN ARROW)
*
            GOSUB CONVERT.VALUE
*
            LINK.KEY = 'n'
            FK.STR = CHAR(27):'%':CHAR(KEY.NUMBER-1):CHAR(1):LINK.KEY:KEY.VALUE:CHAR(25)
            CRT FK.STR:
         END ELSE
            CRT 'INVALID FUNCTION KEY (NOT PROGRAMMABLE)'
         END
      NEXT IPARAM
      STOP

*
*
* CONVERT VALUE
*   '|' = CARRIAGE RETURN
*   '$xxx' = ASCII DECIMAL CODE (MUST BE 3 DIGITS)
*   '$$' = REAL DOLLAR SIGN
*
CONVERT.VALUE:
      OLD.VALUE = KEY.VALUE
      KEY.VALUE = ''
      LEN.VAL = LEN(OLD.VALUE)
      CH.NUM = 0
      LOOP
         CH.NUM += 1
      UNTIL CH.NUM > LEN.VAL
         CH = OLD.VALUE[CH.NUM,1]
         BEGIN CASE
            CASE CH = '$'
               NCH = OLD.VALUE[CH.NUM+1,1]
               IF NCH = '$' THEN
                  KEY.VALUE := '$'
                  CH.NUM += 1
               END ELSE
                  ASCII.CODE = OLD.VALUE[CH.NUM+1,3]
                  KEY.VALUE := CHAR(ASCII.CODE)
                  CH.NUM += 3
               END
            CASE CH = '|'
               KEY.VALUE := CHAR(13)
            CASE 1
               KEY.VALUE := CH
         END CASE
      REPEAT
      RETURN


   END
