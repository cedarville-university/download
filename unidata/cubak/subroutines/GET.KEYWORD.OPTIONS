      SUBROUTINE GET.KEYWORD.OPTIONS(O.PROGRAM.NAME, O.KEYWORD.RECORD.LIST, O.ERRMSG, I.KEYWORD.RECORD.LIST, I.MUTUALLY.EXCLUSIVE.LIST, I.COREQUISITE.LIST)
*
* INFO/BASIC SUBROUTINE
* 07/09/92
* DWS
* TITLE ----- GET.COMMAND.LINE
*
*
* PURPOSE: RETURN COMMAND LINE OPTIONS USING INFORMATION KEYWORD STYLE
*
*
*     Last updated by LIVE (SJOQUIST) at 09:18:09 on 07/09/1992.
*
*************************************************************************
*


      GOSUB SET.UP
      GOSUB FIND.PROGRAM.NAME
      FOR ITEM.CTR=BEG.ITEM TO NUM.ITEMS
         ITEM = ITEM.LIST<ITEM.CTR>
         ITEM.QUOTED = ITEM.QUOTED.LIST<ITEM.CTR>
         GOSUB CHECK.FOR.KEYWORD
         IF ITEM.IS.KEYWORD THEN
            GOSUB PROCESS.KEYWORD
         END ELSE
            GOSUB PROCESS.VALUE
         END
      NEXT ITEM.CTR
      FOR I.KEYWORD.POS=1 TO NUM.I.KEYWORDS
         GOSUB SPLIT.I.KEYWORD.RECORD
         GOSUB FIND.O.KEYWORD
         GOSUB CHECK.MIN.OCC
      NEXT I.KEYWORD.POS
*
* (POS #1 IN O.KEYWORD.RECORD.LIST IS RESERVED FOR VALUES NOT ASSOCIATED WITH A KEYWORD)
*
      FOR O.KEYWORD.CTR=2 TO NUM.O.KEYWORDS
         KEYWORD = O.KEYWORD.RECORD.LIST<OKW.KEYWORD,O.KEYWORD.CTR>
         NUM.VAL = OTEMP.NUM.VAL.LIST<1,O.KEYWORD.CTR> + 0
         LOCATE KEYWORD IN I.KEYWORD.RECORD.LIST<IKW.KEYWORD,1> SETTING I.KEYWORD.POS ELSE
            STOP 'Fatal error in GET.KEYWORD.OPTIONS'
         END
         GOSUB SPLIT.I.KEYWORD.RECORD
         GOSUB CHECK.MIN.VAL
         GOSUB CHECK.COREQUISITE
      NEXT O.KEYWORD.CTR
      RETURN


*
*
*
*
SET.UP:
      COMMAND.LINE = @SENTENCE
      ITEM.LIST = ''
      ITEM.QUOTED.LIST = ''
      NUM.ITEMS = 0
      CALL PARSE.LINE(COMMAND.LINE,ITEM.LIST,ITEM.QUOTED.LIST,NUM.ITEMS)
      O.PROGRAM.NAME = ''
      O.KEYWORD.RECORD.LIST = ''
      O.ERRMSG = ''
      ITEMP.NUM.OCC.LIST = ''
      OTEMP.NUM.VAL.LIST = ''
      NUM.I.KEYWORDS = COUNT(I.KEYWORD.RECORD.LIST<1>,@VM) + (I.KEYWORD.RECORD.LIST<1> # '')
*
* O.KEYWORD.RECORD.LIST<2,1> IS RESERVED FOR VALUES NOT ASSOCIATED WITH A KEYWORD
* ANY VALUES PRECEDING THE FIRST KEYWORD ON THE LINE ALSO ARE IN THIS LIST
*
      NUM.O.KEYWORDS = 1
      NO.KEYWORD.POS = 1
      O.KEYWORD.POS = NO.KEYWORD.POS
      MAX.VAL = ''
      NUM.MUTUALLY.EXCLUSIVE = COUNT(I.MUTUALLY.EXCLUSIVE.LIST,@FM) + (I.MUTUALLY.EXCLUSIVE.LIST # '')
      NUM.COREQUISITE = COUNT(I.COREQUISITE.LIST,@FM) + (I.COREQUISITE.LIST # '')
*
* I.KEYWORD.RECORD.LIST STRUCTURE
*    FIELD         DESCRIPTION
*      1      KEYWORD
*      2      MINIMUM # OF OCCURENCES REQUIRED
*      3      MAXIMUM # OF OCCURENCES ALLOWED
*      4      MINIMUM # OF VALUES REQUIRED
*      5      MAXIMUM # OF VALUES ALLOWED
*
      IKW.KEYWORD = 1
      IKW.MIN.OCC = 2
      IKW.MAX.OCC = 3
      IKW.MIN.VAL = 4
      IKW.MAX.VAL = 5
*
* O.KEYWORD.RECORD.LIST STRUCTURE
*    FIELD         DESCRIPTION
*      1      KEYWORD
*      2      LIST OF VALUES FOR THIS KEYWORD (STORED AS SUBVALUES)
*
      OKW.KEYWORD = 1
      OKW.VALUES = 2
      RETURN



*
*
* FIND THE PROGRAM NAME
*    CATALOGUED PROGRAMS HAVE PROGRAM NAME FIRST
*    NON CATALOGUED PROGRAMS HAVE IT THIRD (RUN BP PROGNAME)
*
FIND.PROGRAM.NAME:
      IF ITEM.LIST<1> = 'RUN' THEN
         BEG.ITEM = 3
      END ELSE
         BEG.ITEM = 1
      END
      O.PROGRAM.NAME = ITEM.LIST<BEG.ITEM>
      BEG.ITEM += 1
      RETURN

*
*
* CHECK ITEM FOR KEYWORD
*
CHECK.FOR.KEYWORD:
      IF ITEM.QUOTED THEN
         ITEM.IS.KEYWORD = @FALSE
      END ELSE
         LOCATE ITEM IN I.KEYWORD.RECORD.LIST<IKW.KEYWORD,1> SETTING I.KEYWORD.POS THEN
            ITEM.IS.KEYWORD = @TRUE
         END ELSE
            ITEM.IS.KEYWORD = @FALSE
         END
      END
      RETURN


*
*
* START A NEW KEYWORD
*
PROCESS.KEYWORD:
      KEYWORD.IS.OKAY = @TRUE
      GOSUB SPLIT.I.KEYWORD.RECORD
      GOSUB CHECK.MAX.OCC
      GOSUB CHECK.MUTUALLY.EXCLUSIVE
      IF KEYWORD.IS.OKAY THEN
         GOSUB STORE.KEYWORD
      END
      RETURN


*
*
* SPLIT I.KEYWORD.RECORD
*
SPLIT.I.KEYWORD.RECORD:
      KEYWORD = I.KEYWORD.RECORD.LIST<IKW.KEYWORD,I.KEYWORD.POS>
      MIN.OCC = I.KEYWORD.RECORD.LIST<IKW.MIN.OCC,I.KEYWORD.POS>
      MAX.OCC = I.KEYWORD.RECORD.LIST<IKW.MAX.OCC,I.KEYWORD.POS>
      MIN.VAL = I.KEYWORD.RECORD.LIST<IKW.MIN.VAL,I.KEYWORD.POS>
      MAX.VAL = I.KEYWORD.RECORD.LIST<IKW.MAX.VAL,I.KEYWORD.POS>
      RETURN


*
*
* CHECK MAX.OCC
*
CHECK.MAX.OCC:
      IF MAX.OCC = '' THEN
         RETURN
      END
      IF ITEMP.NUM.OCC.LIST<1,I.KEYWORD.POS> >= MAX.OCC THEN
         KEYWORD.IS.OKAY = @FALSE
         BEGIN CASE
            CASE MAX.OCC = 0
               O.ERRMSG<-1> = '"':KEYWORD:'" may not appear on the command line.'
            CASE MAX.OCC = 1
               O.ERRMSG<-1> = '"':KEYWORD:'" may only appear one time on the command line.'
            CASE 1
               O.ERRMSG<-1> = '"':KEYWORD:'" may only appear ':MAX.OCC:' times on the command line.'
         END CASE
      END
      RETURN


*
*
* CHECK MUTUALLY EXCLUSIVE
*
CHECK.MUTUALLY.EXCLUSIVE:
      FOR MUTEXC.CTR=1 TO NUM.MUTUALLY.EXCLUSIVE
         LOCATE KEYWORD IN I.MUTUALLY.EXCLUSIVE.LIST<MUTEXC.CTR,1> SETTING FOUND.POS THEN
            NUM.TO.CHECK = COUNT(I.MUTUALLY.EXCLUSIVE.LIST<MUTEXC.CTR,1>,@VM) + 1
            FOR CHECK.CTR =1 TO NUM.TO.CHECK
               IF CHECK.CTR # FOUND.POS THEN
                  KEYWORD.TO.CHECK = I.MUTUALLY.EXCLUSIVE.LIST<MUTEXC.CTR,CHECK.CTR>
                  LOCATE KEYWORD.TO.CHECK IN O.KEYWORD.RECORD.LIST<OKW.KEYWORD,1> SETTING TEMP.POS THEN
                     KEYWORD.IS.OKAY = @FALSE
                     O.ERRMSG<-1> = '"':KEYWORD:'" and "':KEYWORD.TO.CHECK:'" are mutually exclusive'
                  END
               END
            NEXT CHECK.CTR
         END
      NEXT MUTEXC.CTR
      RETURN


*
*
* STORE KEYWORD
*
STORE.KEYWORD:
      LOCATE KEYWORD IN O.KEYWORD.RECORD.LIST<OKW.KEYWORD,1> SETTING O.KEYWORD.POS ELSE
         NUM.O.KEYWORDS += 1
         O.KEYWORD.POS = NUM.O.KEYWORDS
      END
      O.KEYWORD.RECORD.LIST<OKW.KEYWORD,O.KEYWORD.POS> = KEYWORD
      ITEMP.NUM.OCC.LIST<1,I.KEYWORD.POS> += 1
      RETURN


*
*
* START A NEW VALUE
*
PROCESS.VALUE:
      NUM.VAL = OTEMP.NUM.VAL.LIST<1,O.KEYWORD.POS> + 0
      IF (NUM.VAL >= MAX.VAL) AND (MAX.VAL # '') THEN
         O.KEYWORD.RECORD.LIST<2,NO.KEYWORD.POS,-1> = ITEM
      END ELSE
         OTEMP.NUM.VAL.LIST<1,O.KEYWORD.POS> += 1
         NUM.VAL = OTEMP.NUM.VAL.LIST<1,O.KEYWORD.POS>
         O.KEYWORD.RECORD.LIST<OKW.VALUES,O.KEYWORD.POS,NUM.VAL> = ITEM
      END
      RETURN


*
*
* FIND O.KEYWORD
*
FIND.O.KEYWORD:
      LOCATE KEYWORD IN O.KEYWORD.RECORD.LIST<OKW.KEYWORD,1> SETTING O.KEYWORD.POS THEN
         O.KEYWORD.FOUND = @TRUE
         NUM.VAL = OTEMP.NUM.VAL.LIST<1,O.KEYWORD.POS>
      END ELSE
         O.KEYWORD.FOUND = @FALSE
         NUM.VAL = 0
      END
      RETURN


*
*
* CHECK FOR MIN.OCC REQUIRED
*
CHECK.MIN.OCC:
      IF MIN.OCC < 1 THEN
         RETURN
      END
         NUM.OCC = ITEMP.NUM.OCC.LIST<1,I.KEYWORD.POS> + 0
      IF NUM.OCC < MIN.OCC THEN
         IF MIN.OCC = 1 THEN
            O.ERRMSG<-1> = '"':KEYWORD:'" is a required keyword.'
         END ELSE
            O.ERRMSG<-1> = '"':KEYWORD:'" must occur at least ':MIN.OCC:' times.'
         END
      END
      RETURN


*
*
* CHECK FOR MIN.VAL REQUIRED
*
CHECK.MIN.VAL:
      IF MIN.VAL < 1 THEN
         RETURN
      END
      IF NUM.VAL < MIN.VAL THEN
         IF MIN.VAL = 1 THEN
            O.ERRMSG<-1> = '"':KEYWORD:'" must be followed by at least one value.'
         END ELSE
            O.ERRMSG<-1> = '"':KEYWORD:'" must be followed by at least ':MIN.VAL:' values.'
         END
      END
      RETURN


*
*
* CHECK COREQUISITE KEYWORDS
*
CHECK.COREQUISITE:
      FOR COREQ.CTR=1 TO NUM.COREQUISITE
         LOCATE KEYWORD IN I.COREQUISITE.LIST<COREQ.CTR,1> SETTING FOUND.POS THEN
            NUM.TO.CHECK = COUNT(I.COREQUISITE.LIST<COREQ.CTR>,@VM) + 1
            FOR CHECK.CTR =1 TO NUM.TO.CHECK
               IF CHECK.CTR # FOUND.POS THEN
                  KEYWORD.TO.CHECK = I.COREQUISITE.LIST<COREQ.CTR,CHECK.CTR>
                  LOCATE KEYWORD.TO.CHECK IN O.KEYWORD.RECORD.LIST<OKW.KEYWORD,1> SETTING TEMP.POS ELSE
                     O.ERRMSG<-1> = 'You must specify "':KEYWORD.TO.CHECK:'" when using "':KEYWORD:'"'
                  END
               END
            NEXT CHECK.CTR
         END
      NEXT COREQ.CTR
      RETURN

   END
