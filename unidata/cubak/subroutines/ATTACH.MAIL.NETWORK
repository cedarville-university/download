      SUBROUTINE ATTACH.MAIL.NETWORK(RETURN.MESSAGE,PASSED.ADDRESSEE,PASSED.SENDER,SUBJECT,INCLUDE.MESSAGE,ATTACH.MESSAGE,X.USE.LANDSCAPE,X.CHARS.PER.LINE)
*
* UNIBASIC PROGRAM
* 06/21/99
* DLR
* TITLE ----- ATTACH.MAIL.NETWORK
*
* MODULE : I-MAIL
* PURPOSE: SEND MAIL AS AN ATTACHMENT TO A NETWORK ADDRESS
*
* Stamped: p2 rotmand, /datatel/live/collive, user #14097, 11 Jul 00, 02:23PM.
* New version of a2ps requires slightly different arguments.
* Stamped: t4 rotmand, /disk1/collive, user #26060, 21 Jun 99, 03:23PM.
*
*************************************************************************
*

      $INSERT I_I.MAIL



      GOSUB SET.UP
      USE.MESSAGE = ATTACH.MESSAGE
      CONVERT @VM TO @FM IN USE.MESSAGE
      RETURN.MESSAGE = ''
      NUM.ADDRESSEES = COUNT(PASSED.ADDRESSEE,@VM) + (PASSED.ADDRESSEE # '')
      FOR ADDRESSEE.CTR=1 TO NUM.ADDRESSEES
         ADDRESSEE = PASSED.ADDRESSEE<1,ADDRESSEE.CTR>
         IF COUNT(ADDRESSEE,'@') = 0 THEN
            ADDRESSEE := '@':IMAILCM.TCP.ROUTER
         END
         ADDRESSEE = OCONV(ADDRESSEE,'MCL')
         GOSUB GENERATE.KEYS
         SMTP.MAIL.REC = ''
         GOSUB BUILD.HEADER
         GOSUB SEND.MESSAGE
      NEXT ADDRESSEE.CTR
      RETURN



SET.UP: 
      ACTUAL.SENDER = OCONV(PASSED.SENDER<1,1>,'MCL')
      FULL.NAME = PASSED.SENDER<1,2>
      ERROR.RET = ''
      ERROR.MSG = ''
      F.HOLD = ''
      CALL OPEN.FILE(F.HOLD,'_HOLD_',ERROR.RET,ERROR.MSG)
      RETURN

BUILD.HEADER: 
      SMTP.MAIL.REC<-1> = 'To: ':ADDRESSEE
      IF ACTUAL.SENDER THEN
         USE.SENDER = ACTUAL.SENDER
      END ELSE
         USE.SENDER = 'S':OCONV(@LOGNAME,'MCU'):'@':IMAILCM.TCP.ROUTER
      END
      SMTP.MAIL.REC<-1> = 'From: ':USE.SENDER
      IF SUBJECT THEN
         SMTP.MAIL.REC<-1> = 'Subject: ':SUBJECT
      END ELSE
         SMTP.MAIL.REC<-1> = 'Subject: E-mail from ':USE.SENDER
      END
      SMTP.MAIL.REC<-1> = 'Organization: Administrative Message'
      SMTP.MAIL.REC<-1> = ' '
      IF INCLUDE.MESSAGE # '' THEN
         X.TEMP = INCLUDE.MESSAGE
         CONVERT @VM TO @FM IN X.TEMP
         SMTP.MAIL.REC<-1> = X.TEMP
      END
      RETURN






*
GENERATE.KEYS: 
      KEY.BASE = @LOGNAME
      TEXT.KEY = KEY.BASE:'.txt'
      PS.KEY = KEY.BASE:'.ps'
      PDF.KEY = KEY.BASE:'.pdf'
      SMTP.KEY = KEY.BASE:'.smtp'
      SH.KEY = KEY.BASE:'.sh'
      RETURN


SEND.MESSAGE: 
      X.PATH = './_HOLD_/'
      SH.REC = ''
      SH.REC<-1> = 'cat ':X.PATH:SMTP.KEY
      SH.REC<-1> = 'uuencode ':X.PATH:PDF.KEY:' ':X.PATH:PDF.KEY
      WRITE SMTP.MAIL.REC ON F.HOLD, SMTP.KEY
      WRITE USE.MESSAGE ON F.HOLD, TEXT.KEY
      WRITE SH.REC ON F.HOLD, SH.KEY
      R.SCRIPT = ''
      R.SCRIPT<-1> = 'rm ':X.PATH:PDF.KEY
* Use '-p' for protrait mode (default is landscape)
* Use '-f9' for 80-character lines in portrait mode (9 point)
* Use '-f7.5' for 132-character lines in portrait mode (7.5 point)
* Use '-f6' for 180-character lines in landscape mode (7.5 point)
* Under HP-UX 10.20, we had these arguments:
* -nP   send output to stdout rather than directly to the printer
* -ns   don't print borders around the pages
* -nH   don't print page headers
* -nu   don't print file name at bottom of page
* -nL   don't print user's login name
* -1    print one logical page per physical page
* Under HP-UX 11.0, we have these arguments:
* -ousername.ps    output file name
* -ns   don't print borders around the pages
* -B    don't print page headers
* -nu   don't print file name at bottom of page
* -nL   don't print user's login name
* -1    print one logical page per physical page
*OLD VERSION*      R.SCRIPT<-1> = 'a2ps -nP -ns -nH -nu -nL -1'
      R.SCRIPT<-1> = '/usr/local/bin/a2ps'
* ONE LOGICAL PAGE PER PHYSICAL PAGE
      R.SCRIPT := ' --columns=1'
* TRUNCATE LONG LINES
      R.SCRIPT := ' -c'
* NO HEADINGS AT ALL
      R.SCRIPT := ' -B'
* NO BORDERS
      R.SCRIPT := ' --borders=no'
      IF X.USE.LANDSCAPE THEN
         R.SCRIPT := ' -r'
         BEGIN CASE
            CASE X.CHARS.PER.LINE GT 159
               R.SCRIPT := ' -f7'
            CASE X.CHARS.PER.LINE GT 129
               R.SCRIPT := ' -f7.5'
            CASE 1
               R.SCRIPT := ' -f8.5'
         END CASE
      END ELSE
*OLD VERSION*         R.SCRIPT := ' -p'
         R.SCRIPT := ' -R'
         BEGIN CASE
            CASE X.CHARS.PER.LINE GT 109
               R.SCRIPT := ' -f7.5'
            CASE X.CHARS.PER.LINE GT 90
               R.SCRIPT := ' -f8.5'
            CASE 1
               R.SCRIPT := ' -f9.5'
         END CASE
      END
*OLD VERSION*      R.SCRIPT := ' ':X.PATH:TEXT.KEY:' >':X.PATH:PS.KEY
      R.SCRIPT := ' ':X.PATH:TEXT.KEY:' -o':X.PATH:PS.KEY
      R.SCRIPT<-1> = 'ps2pdf ':X.PATH:PS.KEY:' ':X.PATH:PDF.KEY
      R.SCRIPT<-1> = 'sh ':X.PATH:SH.KEY:'|/usr/sbin/sendmail -t -F"':USE.SENDER:'"'
      NUM.SCRIPT = DCOUNT(R.SCRIPT,@FM)
*DLR*      OPEN '','VOC' TO F.VOC ELSE
*DLR*         STOP 'OPEN VOC'
*DLR*      END
*DLR*      WRITE R.SCRIPT ON F.VOC,'DAVE4'
      FOR WHICH.SCRIPT = 1 TO NUM.SCRIPT
         X.SCRIPT = R.SCRIPT<WHICH.SCRIPT>
         PCPERFORM X.SCRIPT
      NEXT WHICH.SCRIPT
      RETURN.MESSAGE<-1> = 'NET':@SM:'via gateway ':IMAILCM.TCP.ROUTER:' key ':SMTP.KEY
      RETURN

   END
