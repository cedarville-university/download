      SUBROUTINE DRAW.PCL.BOX(A.PRINT.UNIT,A.NUM.LINES,A.NUM.COLUMNS,A.LINES.PER.INCH,A.CHARS.PER.INCH,A.CHARS.TO.INDENT,A.BORDER.THICKNESS,A.SHADING.PCT,A.FILL.PATTERN)
*
* UNIBASIC SUBROUTINE
* 01/02/98
* DLR (DAVE ROTMAN)
* TITLE ----- DRAW.PCL.BOX
*
*
* MODULE :
* PURPOSE: DRAW A BOX AROUND PRINTED TEXT
*   USING HEWLETT-PACKARD 'PCL5' COMMANDS
*
* Special notes:
*   A.BORDER.THICKNESS is in decipoints (720 decipoints = 1 inch)
*   A.SHADING.PCT takes any value 0 through 100, but HP interprets
*      these to 0, 2, 10, 20, 35, 55, 80, 99, and 100
*   A.FILL.PATTERN takes the following values:
*      null     no fill pattern
*      1        horizontal lines
*      2        vertical lines
*      3        diagonal lines uphill
*      4        diagonal lines downhill
*      5        cross-hatch rectangles (graph paper)
*      6        cross-hatch (diagonal graph paper)
*
* Stamped: qd rotmand, /disk1/collive, user #20659, 02 Jan 98, 02:44PM.
*
*************************************************************************
*

      ESC.CHAR = CHAR(27)

      GOSUB VERIFY.PARAMETERS
      GOSUB GENERATE.COMMANDS
      RETURN


VERIFY.PARAMETERS: 
      IF A.PRINT.UNIT = '' OR NOT(NUM(A.PRINT.UNIT)) THEN
         X.PRINT.UNIT = 0
      END ELSE
         X.PRINT.UNIT = INT(A.PRINT.UNIT)
      END

      IF A.NUM.LINES = '' OR NOT(NUM(A.NUM.LINES)) THEN
         X.NUM.LINES = 1
      END ELSE
         X.NUM.LINES = INT(A.NUM.LINES)
      END

      IF A.NUM.COLUMNS = '' OR NOT(NUM(A.NUM.COLUMNS)) THEN
         X.NUM.COLUMNS = 76
      END ELSE
         X.NUM.COLUMNS = INT(A.NUM.COLUMNS)
      END

      IF A.LINES.PER.INCH = '' OR NOT(NUM(A.LINES.PER.INCH)) THEN
         X.LINES.PER.INCH = 8
      END ELSE
         X.LINES.PER.INCH = INT(A.LINES.PER.INCH)
      END

      IF A.CHARS.PER.INCH = '' OR NOT(NUM(A.CHARS.PER.INCH)) THEN
         X.CHARS.PER.INCH = 10
      END ELSE
         X.CHARS.PER.INCH = INT(A.CHARS.PER.INCH)
      END

      IF A.CHARS.TO.INDENT = '' OR NOT(NUM(A.CHARS.TO.INDENT)) THEN
         X.CHARS.TO.INDENT = 0
      END ELSE
         X.CHARS.TO.INDENT = INT(A.CHARS.TO.INDENT)
      END

      IF A.BORDER.THICKNESS = '' OR NOT(NUM(A.BORDER.THICKNESS)) THEN
         X.BORDER.THICKNESS = 7
      END ELSE
         X.BORDER.THICKNESS = INT(A.BORDER.THICKNESS)
      END

      IF A.SHADING.PCT = '' OR NOT(NUM(A.SHADING.PCT)) THEN
         X.SHADING.PCT = 0
      END ELSE
         X.SHADING.PCT = INT(A.SHADING.PCT)
      END

      IF A.FILL.PATTERN = '' OR NOT(NUM(A.FILL.PATTERN)) THEN
         X.FILL.PATTERN = ''
      END ELSE
         X.FILL.PATTERN = INT(A.FILL.PATTERN)
      END
      RETURN



GENERATE.COMMANDS: 
      RECTANGLE.WIDTH.DECIPOINTS = X.NUM.COLUMNS*720/X.CHARS.PER.INCH
      RECTANGLE.HEIGHT.DECIPOINTS = X.NUM.LINES*720/X.LINES.PER.INCH
      INDENT.DECIPOINTS = X.CHARS.TO.INDENT*720/X.CHARS.PER.INCH
      LEFT.TO.LEFT.DECIPOINTS = RECTANGLE.WIDTH.DECIPOINTS - X.BORDER.THICKNESS
      TOP.TO.TOP.DECIPOINTS = RECTANGLE.HEIGHT.DECIPOINTS - X.BORDER.THICKNESS
*
* TOP BORDER
      IF X.CHARS.TO.INDENT > 0 THEN
         PRINT.LINE = ESC.CHAR
         PRINT.LINE := '&a+':INDENT.DECIPOINTS:'H'
         PRINT ON X.PRINT.UNIT PRINT.LINE:
      END
      PRINT.LINE = ESC.CHAR
      PRINT.LINE := '*c'
      PRINT.LINE := RECTANGLE.WIDTH.DECIPOINTS:'h'
      PRINT.LINE := X.BORDER.THICKNESS:'v'
      PRINT.LINE := '0P'
      PRINT ON X.PRINT.UNIT PRINT.LINE:
* LEFT BORDER
      PRINT.LINE = ESC.CHAR
      PRINT.LINE := '*c'
      PRINT.LINE := X.BORDER.THICKNESS:'h'
      PRINT.LINE := RECTANGLE.HEIGHT.DECIPOINTS:'v'
      PRINT.LINE := '0P'
      PRINT ON X.PRINT.UNIT PRINT.LINE:
* RIGHT BORDER
      PRINT.LINE = ESC.CHAR
      PRINT.LINE := '&a+':LEFT.TO.LEFT.DECIPOINTS:'H'
      PRINT ON X.PRINT.UNIT PRINT.LINE:
      PRINT.LINE = ESC.CHAR
      PRINT.LINE := '*c'
      PRINT.LINE := X.BORDER.THICKNESS:'h'
      PRINT.LINE := RECTANGLE.HEIGHT.DECIPOINTS:'v'
      PRINT.LINE := '0P'
      PRINT ON X.PRINT.UNIT PRINT.LINE:
* BOTTOM BORDER
      PRINT.LINE = ESC.CHAR
      PRINT.LINE := '&a-':LEFT.TO.LEFT.DECIPOINTS:'h'
      PRINT.LINE := '+':TOP.TO.TOP.DECIPOINTS:'V'
      PRINT ON X.PRINT.UNIT PRINT.LINE:
      PRINT.LINE = ESC.CHAR
      PRINT.LINE := '*c'
      PRINT.LINE := RECTANGLE.WIDTH.DECIPOINTS:'h'
      PRINT.LINE := X.BORDER.THICKNESS:'v'
      PRINT.LINE := '0P'
      PRINT ON X.PRINT.UNIT PRINT.LINE:
* RETURN TO ORIGIN OF RECTANGLE
      PRINT.LINE = ESC.CHAR
      PRINT.LINE := '&a-':TOP.TO.TOP.DECIPOINTS:'V'
      PRINT ON X.PRINT.UNIT PRINT.LINE:
*
* CHECK FOR SHADING AND FILL PATTERN
      IF X.SHADING.PCT > 0 THEN
         PRINT.LINE = ESC.CHAR
         PRINT.LINE := '*c'
         PRINT.LINE := RECTANGLE.WIDTH.DECIPOINTS:'h'
         PRINT.LINE := RECTANGLE.HEIGHT.DECIPOINTS:'v'
         PRINT.LINE := X.SHADING.PCT:'g'
         PRINT.LINE := '2P'
         PRINT ON X.PRINT.UNIT PRINT.LINE:
      END ELSE
         IF X.FILL.PATTERN > 0 THEN
            PRINT.LINE = ESC.CHAR
            PRINT.LINE := '*c'
            PRINT.LINE := RECTANGLE.WIDTH.DECIPOINTS:'h'
            PRINT.LINE := RECTANGLE.HEIGHT.DECIPOINTS:'v'
            PRINT.LINE := X.FILL.PATTERN:'g'
            PRINT.LINE := '3P'
            PRINT ON X.PRINT.UNIT PRINT.LINE:
         END
      END
* UNDO INDENT IF NECESSARY
      IF X.CHARS.TO.INDENT > 0 THEN
         PRINT.LINE = ESC.CHAR
         PRINT.LINE := '&a-':INDENT.DECIPOINTS:'H'
         PRINT ON X.PRINT.UNIT PRINT.LINE:
      END
      RETURN


   END
