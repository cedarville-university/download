      SUBROUTINE CC.FILE.SECURITY(ACCESS.OK,USER.NAME,SEC.FILE.NAME,FIELD.LIST,ACCESS.MODE)
*
* INFO/BASIC SUBROUTINE
* 5/5/88
* DWS
* TITLE ----- CC.FILE.SECURITY
* REL 0.0
*
*
* MODULE : SEC
* PURPOSE: CHECK LIST OF FIELDS AGAINST SECURITY FILE FOR ACCESS RIGHTS
*
* Stamped: pty/ttyp6 rotmand, /disk1/collive, user #8457, 06 Jul 95, 11:03AM.
* Allow everyone access to SAVEDLISTS and DL.
* Stamped: pty/ttyp4 rotmand, /disk1/collive, user #913, 23 Jun 94, 03:42PM.
* Unidata conversion
*     Last updated by LIVE (ROTMAN) at 16:00:19 on 06/12/1990.
* "Minor" changes in logic.
*     Last updated by LIVE (SJOQUIST) at 10:20:33 on 05/05/1988.
*
*************************************************************************
*

      $INCLUDE LOCAL.SOURCE I_SEC.COMMON

*
*
* MAIN CONTROL
*

      ALLOW.EVERYONE = ''
      ALLOW.EVERYONE<1,-1> = 'SAVEDLISTS'
      ALLOW.EVERYONE<1,-1> = 'DL'
      ALLOW.EVERYONE<1,-1> = '_DL_'
      ALLOW.EVERYONE<1,-1> = 'SHOW.AND.DELETE.WORKFILE'
      ACCESS.OK = ''
      GOSUB GET.SEC.REC
      GOSUB CHECK.SECURITY
      RETURN



*
*
* GET SEC KEY
*  CHECK IN THIS ORDER:
*     1. USER.NAME*$ALL
*     2. USER.NAME*SEC.FILE.NAME
*     3. SECURITY.GROUP*$ALL
*     4. SECURITY.GROUP*SEC.FILE.NAME
*
GET.SEC.REC: 
      SEC.KEY = USER.NAME:'*$ALL'
      GOSUB READ.ACTUAL.RECORD
      IF SEC.FOUND THEN
         RETURN
      END
      SEC.KEY = USER.NAME:'*':SEC.FILE.NAME
      GOSUB READ.ACTUAL.RECORD
      IF SEC.FOUND THEN
         RETURN
      END

      READV SEC.GROUP FROM F.INFO.USERS, USER.NAME, 4 ELSE
         SEC.GROUP = ''
      END
      IF SEC.GROUP THEN
         SEC.KEY = SEC.GROUP:'*$ALL'
         GOSUB READ.ACTUAL.RECORD
         IF SEC.FOUND THEN
            RETURN
         END
         SEC.KEY = SEC.GROUP:'*':SEC.FILE.NAME
         GOSUB READ.ACTUAL.RECORD
         IF SEC.FOUND THEN
            RETURN
         END
      END
      SEC.KEY = ''
      SEC.REC = ''
      RETURN


READ.ACTUAL.RECORD: 
      SEC.FOUND = @TRUE
      READ SEC.REC FROM F.SECURITY, SEC.KEY ELSE
         SEC.FOUND = @FALSE
      END
      RETURN


*
*
* CHECK SECURITY FOR THIS FILE/FIELDS
*
CHECK.SECURITY: 
      GOSUB SET.UP
      LOCATE SEC.FILE.NAME IN ALLOW.EVERYONE<1,1> SETTING POS THEN
         ALLOW.EVERYONE.OK = @TRUE
      END ELSE
         ALLOW.EVERYONE.OK = @FALSE
      END
      NUM.FIELDS = COUNT(FIELD.LIST,@VM) + 1
      FOR FIELD.POS=1 TO NUM.FIELDS
         ACCESS.OK<1,FIELD.POS> = 0
         FIELD = FIELD.LIST<1,FIELD.POS>
         IF ALLOW.EVERYONE.OK THEN
            ACCESS.OK<1,FIELD.POS> = 1
         END ELSE
            GOSUB CHECK.INCLUDED.FIELDS
            GOSUB CHECK.EXCLUDED.FIELDS
         END
      NEXT FIELD.POS
      RETURN


CHECK.INCLUDED.FIELDS: 
      IF ALL.ACCESS OR INCLUDED.FIELDS = '$ALL' THEN
         ACCESS.OK<1,FIELD.POS> = 1
         RETURN
      END
      LOCATE FIELD IN INCLUDED.FIELDS<1,1> SETTING FOUND THEN
         ACCESS.OK<1,FIELD.POS> = 1
      END
      RETURN

CHECK.EXCLUDED.FIELDS: 
      IF EXC.FIELDS = '$ALL' THEN
         ACCESS.OK<1,FIELD.POS> = 0
         RETURN
      END ELSE
         LOCATE FIELD IN EXC.FIELDS<1,1> SETTING FOUND ELSE
            FOUND = 0
         END
      END
      IF FOUND THEN
         ACCESS.OK<1,FIELD.POS> = 0
      END
      RETURN



*
*
* SET UP
*
SET.UP: 
      IF FIELD(SEC.KEY,'*',2,1) = '$ALL' THEN
         ALL.ACCESS = 1
      END ELSE
         ALL.ACCESS = 0
      END
*
* DETERMINE WHICH PAIR OF SECURITY FIELDS TO CHECK
*  1 & 3 : READ FIELD NAMES INC/EXC
*  2 & 4 : READ FIELD NUMBERS INC/EXC
*  5 & 7 : WRITE FIELD NAMES INC/EXC
*  6 & 8 : WRITE FIELD NUMBERS INC/EXC
*
      NUM.OFFSET = 0
      IF NUM(FIELD.LIST<1,1>) THEN NUM.OFFSET = 1
      ACCESS.OFFSET = 0
      IF ACCESS.MODE = 'WRITE' THEN ACCESS.OFFSET = 4
      INCLUDED.FIELDS = SEC.REC<1 + NUM.OFFSET + ACCESS.OFFSET>
      EXC.FIELDS = SEC.REC<3 + NUM.OFFSET + ACCESS.OFFSET>
      RETURN

   END
