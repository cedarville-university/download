      SUBROUTINE SNAKE(RETURN.LIST,VALUE.LIST,NUM.COLS,COL.SIZE,WHICH.COL,FIRST.OR.LAST)
*
* INFO/BASIC SUBROUTINE
* 9/13/88
* DLR
* TITLE ----- SNAKE
*
*
* MODULE :
* PURPOSE: ALLOW I-DESCRIPTORS (OR PRINT.PAGE) TO DO SNAKED COLUMNS
*
* VALUE.LIST     THE VALUES TO BE PLACED IN COLUMNS
* NUM.COLS       NUMBER OF COLUMNS IN THE LAYOUT
* COL.SIZE       NUMBER OF VALUES PER COLUMN (IF LEFT NULL, SUBROUTINE WILL
*                CALCULATE A VALUE SO AS TO EVENLY DISTRIBUTE VALUES IN COLUMNS)
* WHICH.COL      WHICH COLUMN IS THIS I-DESCRIPTOR FOR
* FIRST.OR.LAST  'FIRST'   FILL TABLE FROM FIRST 'N' ENTRIES OF VALUE.LIST
*                any other FILL TABLE FROM LAST 'N' ENTRIES OF VALUE.LIST
*
*
*     Last updated by LIVE (ROTMAN) at 13:57:40 on 09/13/1988.
*
*************************************************************************
*

      RETURN.LIST = ''
      IF NOT(VALUE.LIST) THEN
         RETURN
      END
      INT.NUM.COLS = NUM.COLS
      INT.COL.SIZE = COL.SIZE
      INT.WHICH.COL = WHICH.COL
      COUNT.VALUES = COUNT(VALUE.LIST,@VM) + 1

      IF INT.NUM.COLS = '' OR NOT(NUM(INT.NUM.COLS)) OR INT.NUM.COLS < 1 THEN
         INT.NUM.COLS = 1
      END
      IF INT.COL.SIZE = '' OR NOT(NUM(INT.COL.SIZE)) OR INT.COL.SIZE < 1 THEN
         INT.COL.SIZE = INT(COUNT.VALUES/INT.NUM.COLS) + (MOD(COUNT.VALUES,INT.NUM.COLS)#0)
      END
      IF INT.WHICH.COL = '' OR NOT(NUM(INT.WHICH.COL)) OR INT.WHICH.COL < 1 THEN
         INT.WHICH.COL = INT.NUM.COLS
      END
      INT.NUM.COLS=INT(INT.NUM.COLS)
      INT.COL.SIZE = INT(INT.COL.SIZE)
      INT.WHICH.COL = INT(INT.WHICH.COL)

      SNAKE.SIZE = INT.NUM.COLS*INT.COL.SIZE
      IF COUNT.VALUES > SNAKE.SIZE AND FIRST.OR.LAST # 'FIRST' THEN
         ISTART = COUNT.VALUES - (INT.NUM.COLS-INT.WHICH.COL+1)*INT.COL.SIZE + 1
         IEND = ISTART + INT.COL.SIZE - 1
      END ELSE
         ISTART = (INT.WHICH.COL-1)*INT.COL.SIZE+1
         IF ISTART > COUNT.VALUES THEN
            RETURN
         END
         IEND = ISTART + INT.COL.SIZE -1
         IF IEND > COUNT.VALUES THEN
            IEND = COUNT.VALUES
         END
      END
      J=0
      FOR I = ISTART TO IEND
         J+=1
         RETURN.LIST<1,J>=VALUE.LIST<1,I>
      NEXT I
      RETURN
   END
