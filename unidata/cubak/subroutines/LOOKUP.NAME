      SUBROUTINE LOOKUP.NAME(RETURN.ID.LIST, PASSED.NAME, EXACT.MATCH)
*
* INFO/BASIC SUBROUTINE
* 8/3/89
* DWS
* TITLE ----- LOOKUP.NAME
*
*
* PURPOSE: FIND ALL ID#S THAT MATCH GIVEN NAME
*
* Stamped: t2 rotmand, /disk1/collive, user #28861, 15 Dec 99, 03:55PM.
*   Modify filter routine to handle missing first names in search
*   criteria.
* Stamped: rb rotmand, /disk1/collive, user #18257, 07 Aug 97, 06:46AM.
*   Release 14 (much slower!)
*     Last updated by LIVE (SJOQUIST) at 14:38:01 on 08/03/1989.
*
*************************************************************************
*

      NAME.FILTER.IS.ACTIVE = @FALSE


      OPEN '', 'INDEX.PARTIAL.NAME' TO F.INDEX.PARTIAL.NAME ELSE
         STOP 'CAN NOT OPEN "INDEX.PARTIAL.NAME"'
      END
*
*
      RETURN.ID.LIST = ''
      IF PASSED.NAME = '' THEN
         RETURN
      END
      USE.NAME = TRIM(PASSED.NAME)
      USE.LAST = FIELD(USE.NAME,',',1,1)
      USE.FIRST.MIDDLE = TRIM(FIELD(USE.NAME,',',2,99))
      USE.FIRST = FIELD(USE.FIRST.MIDDLE,' ',1,1)
      USE.MIDDLE = FIELD(USE.FIRST.MIDDLE,' ',2,99)
      UPPER.LAST = OCONV(USE.LAST,'MCU')
      UPPER.FIRST = OCONV(USE.FIRST,'MCU')
      UPPER.MIDDLE = OCONV(USE.MIDDLE,'MCU')
      LEN.LAST = LEN(UPPER.LAST)
      LEN.FIRST = LEN(UPPER.FIRST)
      LEN.MIDDLE = LEN(UPPER.MIDDLE)
      GOSUB BUILD.PRIMARY.KEY
      GOSUB READ.INDEX.PARTIAL.NAME
      IF NOT(X.FOUND.INDEX.PARTIAL.NAME) THEN
         RETURN
      END
      INDEX.PARTIAL.NAME.FIELD1 = INDEX.PARTIAL.NAME.REC<1>
      IF INDEX.PARTIAL.NAME.FIELD1 = '' THEN
         GOSUB LOAD.SECONDARY.RECORDS
      END ELSE
         RETURN.ID.LIST = INDEX.PARTIAL.NAME.FIELD1
      END
      IF RETURN.ID.LIST = '' THEN
         RETURN
      END
      IF NAME.FILTER.IS.ACTIVE THEN
         GOSUB FILTER.NAMES
      END
      NUM.ID.LIST = DCOUNT(RETURN.ID.LIST,@VM)
*      CRT 'Returning ':NUM.ID.LIST:' record keys...'
      RETURN


FILTER.NAMES: 
      OPEN '','PERSON' TO F.PERSON ELSE
         STOP 'CAN NOT OPEN "PERSON"'
      END
      FILTER.ID.LIST = RETURN.ID.LIST
      RETURN.ID.LIST = ''
      NUM.ID = DCOUNT(FILTER.ID.LIST,@VM)
*DLR*IF @LOGNAME = 'rotmand' THEN
*DLR*      CRT 'Filtering ':NUM.ID:' matches on the name string ':PASSED.NAME:'...'
*DLR*END
      FOR WHICH.ID = 1 TO NUM.ID
         ID.NO = FILTER.ID.LIST<1,WHICH.ID>
         READ PERSON.REC FROM F.PERSON, ID.NO THEN
            PER.LAST.NAME = PERSON.REC<1>
            PER.FIRST.NAME = PERSON.REC<3>
            PER.MIDDLE.NAME = PERSON.REC<4>
            GOSUB CHECK.NAME
         END
      NEXT WHICH.ID
      RETURN


BUILD.PRIMARY.KEY: 
      KEY.LAST = UPPER.LAST
      CONVERT ' ' TO '' IN KEY.LAST
      INDEX.PARTIAL.NAME.KEY = '0000'
      IF LEN(KEY.LAST) > 4 THEN
         INDEX.PARTIAL.NAME.KEY := KEY.LAST[1,5]
      END ELSE
         INDEX.PARTIAL.NAME.KEY := KEY.LAST[1,2]
      END
      IF LEN.FIRST > 0 THEN
         INDEX.PARTIAL.NAME.KEY := '_'
         IF LEN.FIRST > 2 THEN
            INDEX.PARTIAL.NAME.KEY := UPPER.FIRST[1,1]:UPPER.FIRST[3,1]
         END ELSE
            INDEX.PARTIAL.NAME.KEY := UPPER.FIRST[1,1]
         END
      END
      RETURN


READ.INDEX.PARTIAL.NAME: 
      X.FOUND.INDEX.PARTIAL.NAME = @TRUE
      INDEX.PARTIAL.NAME.REC = ''
      READ INDEX.PARTIAL.NAME.REC FROM F.INDEX.PARTIAL.NAME, INDEX.PARTIAL.NAME.KEY THEN
         X.FOUND.INDEX.PARTIAL.NAME = @TRUE
      END ELSE
         X.FOUND.INDEX.PARTIAL.NAME = @FALSE
      END
      RETURN



LOAD.SECONDARY.RECORDS: 
      KEY.RIGHT.PART = INDEX.PARTIAL.NAME.KEY[5,999]
      NUM.SECONDARY.KEYS = INDEX.PARTIAL.NAME.REC<4>
      IF NUM.SECONDARY.KEYS = '' OR NOT(NUM(NUM.SECONDARY.KEYS)) THEN
         CRT 'Field 4 of INDEX.PARTIAL.NAME record ':INDEX.PARTIAL.NAME.KEY:' is not numeric.'
         RETURN
      END
      FOR WHICH.SECONDARY.KEY = 1 TO NUM.SECONDARY.KEYS
         INDEX.PARTIAL.NAME.KEY = FMT(WHICH.SECONDARY.KEY,'4"0"R'):KEY.RIGHT.PART
         GOSUB READ.INDEX.PARTIAL.NAME
         INDEX.PARTIAL.NAME.FIELD1 = INDEX.PARTIAL.NAME.REC<1>
         IF INDEX.PARTIAL.NAME.FIELD1 = '' THEN
            CRT 'Null id list for INDEX.PARTIAL.NAME record ':INDEX.PARTIAL.NAME.KEY
         END ELSE
            RETURN.ID.LIST<1,-1> = INDEX.PARTIAL.NAME.FIELD1
         END
      NEXT WHICH.SECONDARY.KEY
      RETURN

*
*
* PROCESS LAST.INFO

*
*
* PROCESS FIRST.INFO
*
*DLR*PROCESS.FIRST.INFO: 
*DLR*      NUM.MIDDLE = COUNT(FIRST.INFO,@SM)
*DLR*      ID.LIST = ''
*DLR*      DONE.MIDDLE = 0
*DLR*      FOR MIDDLE.CTR=1 TO NUM.MIDDLE UNTIL DONE.MIDDLE
*DLR*         INDEX.PARTIAL.NAME.MIDDLE = FIELD(FIRST.INFO<1,1,MIDDLE.CTR+1>,'\',1,1)
*DLR*         IF EXACT.MATCH THEN
*DLR*            CHECK.MIDDLE = INDEX.PARTIAL.NAME.MIDDLE
*DLR*         END ELSE
*DLR*            CHECK.MIDDLE = INDEX.PARTIAL.NAME.MIDDLE[1,LEN.MIDDLE]
*DLR*         END
*DLR*         IF CHECK.MIDDLE = UPPER.MIDDLE THEN
*DLR*            ID.LIST = FIELD(FIRST.INFO<1,1,MIDDLE.CTR+1>,'\',2,1)
*DLR*            GOSUB PROCESS.ID.LIST
*DLR*            IF EXACT.MATCH THEN
*DLR*               DONE.MIDDLE = 1
*DLR*            END
*DLR*         END
*DLR*      NEXT MIDDLE.CTR
*DLR*      RETURN


*DLR**
*DLR**
*DLR** PROCESS ID.LIST
*DLR**
*DLR*PROCESS.ID.LIST: 
*DLR*      CONVERT ',' TO @VM IN ID.LIST
*DLR*      RETURN.ID.LIST<1,-1> = ID.LIST
*DLR*      RETURN


CHECK.NAME: 
      TEMP.VALUE = OCONV(PER.LAST.NAME,'MCU')[1,LEN.LAST]
      IF TEMP.VALUE # UPPER.LAST THEN
         RETURN
      END
      IF LEN.FIRST GT 0 THEN
         TEMP.VALUE = OCONV(PER.FIRST.NAME,'MCU')[1,LEN.FIRST]
         IF TEMP.VALUE # UPPER.FIRST THEN
            RETURN
         END
      END
      RETURN.ID.LIST<1,-1> = ID.NO
      RETURN


   END
