      FUNCTION FORMAT.XML(A.INPUT.STRING)
*
* UNIBASIC FUNCTION
* 09/15/2003
* DLR
* TITLE ----- FORMAT.XML
*
*
* MODULE :
* PURPOSE: HANDLE ILLEGAL XML CHARACTERS
*
* Stamped: pty_ttysc voumardb, /datatel/live/collive, user #21608, 18 Nov 04, 01:32PM.
*   Converted value marks in input string to spaces before formatting
* Stamped: p5 rotmand, /datatel/live/collive, user #8225, 15 Sep 03, 08:44AM.
*
*************************************************************************
*

      X.USE.CDATA = @FALSE
      GOSUB SET.UP
      X.RETURN.STRING = A.INPUT.STRING
      CONVERT @VM TO ' ' IN X.RETURN.STRING
      IF X.USE.CDATA THEN
         GOSUB USE.CDATA
      END ELSE
         GOSUB USE.ESCAPE
      END
      RETURN X.RETURN.STRING


SET.UP: 
      X.XML.CDATA.START = '<![CDATA['
      X.XML.CDATA.END = ']]>'
* NOTE THAT THE AMPERSAND MUST BE DONE FIRST.  OTHERWISE, THE
* ESCAPED STRINGS WILL LOOK LIKE AMPERSANDS IN THE ORIGINAL DATA
      XL.XML.ILLEGAL.CHARS = '& < > "'
      XL.XML.ILLEGAL.CHARS := " '"
      CONVERT ' ' TO @VM IN XL.XML.ILLEGAL.CHARS
      STRING.ILLEGAL.CHARS = XL.XML.ILLEGAL.CHARS
      CONVERT @VM TO '' IN STRING.ILLEGAL.CHARS
      NUM.XL.XML.ILLEGAL.CHARS = DCOUNT(XL.XML.ILLEGAL.CHARS,@VM)
      XL.XML.REPLACEMENT = '&amp; &lt; &gt; &quot; &apos;'
      CONVERT ' ' TO @VM IN XL.XML.REPLACEMENT
      RETURN


USE.CDATA: 
      X.TEMP = A.INPUT.STRING
      CONVERT STRING.ILLEGAL.CHARS TO '' IN X.TEMP
      IF LEN(X.TEMP) NE LEN(A.INPUT.STRING) THEN
         X.RETURN.STRING = X.XML.CDATA.START:X.RETURN.STRING:X.XML.CDATA.END
      END
      RETURN


USE.ESCAPE: 
      FOR WHICH.XL.XML.ILLEGAL.CHARS = 1 TO NUM.XL.XML.ILLEGAL.CHARS
         X.XML.ILLEGAL.CHARS = XL.XML.ILLEGAL.CHARS<1,WHICH.XL.XML.ILLEGAL.CHARS>
         X.XML.REPLACEMENT = XL.XML.REPLACEMENT<1,WHICH.XL.XML.ILLEGAL.CHARS>
         SWAP X.XML.ILLEGAL.CHARS WITH X.XML.REPLACEMENT IN X.RETURN.STRING
      NEXT WHICH.XL.XML.ILLEGAL.CHARS
      RETURN


   END
