      SUBROUTINE LOAD.SPOOL.QUEUE(RETURN.STATUS)
*
* INFO/BASIC SUBROUTINE
* 4/27/90
* DWS
* TITLE ----- LOAD.SPOOL.QUEUE
*
*
* PURPOSE: LOAD CURRENT SPOOL QUEUE ENTRIES INTO LABELLED COMMON
*
* Stamped: pty/ttyp6 testuser, /disk1/coltest, user #3736, 14 Jun 94, 04:44PM.
* rewritten for HP-UX
*     Last updated by LIVE (SJOQUIST) at 11:27:46 on 04/27/1990.
*
*************************************************************************
*

      $INCLUDE LOCAL.SOURCE I_SPQUEUE.COMMON

*
*
* MAIN CONTROL
*

      RETURN.STATUS = ''
      GOSUB SET.UP
      IF RETURN.STATUS THEN
         RETURN
      END
      LOOP
         NEXT.QCTR = CALLC c_qnext(CUR.QCTR, F.QUEUE, Q.NODE, Q.USER, Q.NAME, Q.JOB.NUMBER, Q.JOB.STATUS)
      UNTIL NEXT.QCTR = -1
* CHECK TO SEE IF THE JOB HAS ALREADY BEEN PRINTED OR CANCELLED
         IF BITAND(Q.JOB.STATUS,1) = 0 THEN
*CRT Q.NODE:' ':Q.USER:' ':Q.NAME:' ':Q.JOB.NUMBER:' ':Q.JOB.STATUS
            GOSUB INITIALIZE.ENTRY
            GOSUB READ.ENTRY
            GOSUB SPLIT.ENTRY
            GOSUB BUILD.ENTRY
         END
         CUR.QCTR = NEXT.QCTR
      REPEAT
      CALLC c_qclose(F.QUEUE)
*INPUT JUNK
      RETURN



*
*
* SET UP
*
SET.UP: 
      ROOT.PATH = '/usr/spool/lp/'
      REQUEST.PATH = ROOT.PATH:'request/'
      QUEUE.FILE.NAME = ROOT.PATH:'outputq'
      F.QUEUE = CALLC c_qopen(QUEUE.FILE.NAME)
      IF F.QUEUE = 0 THEN
         RETURN.STATUS = 'Can not open spool queue: ':QUEUE.FILE.NAME
         RETURN
      END
*
      CUR.QCTR = 0
      Q.NODE = ''
      Q.USER = ''
      Q.NAME = ''
      Q.JOB.NUMBER = ''
      Q.JOB.STATUS = ''
*
      SPQUEUE.NUM.ENTRIES = 0
      SPQUEUE.ENTRY.NUMBER.LIST = ''
      MAT SPQUEUE.USER.NAME = ''
      MAT SPQUEUE.DATE = ''
      MAT SPQUEUE.TIME = ''
      MAT SPQUEUE.SPOOL.NAME = ''
      MAT SPQUEUE.FILE.NAME = ''
      MAT SPQUEUE.FORM.NAME = ''
      MAT SPQUEUE.SIZE = ''
      MAT SPQUEUE.COPIES = ''
      RETURN



*
*
* INITIALIZE ENTRY FIELDS
*
INITIALIZE.ENTRY: 
      ENTRY.USER.NAME = ''
      ENTRY.SPOOL.NAME = ''
      ENTRY.FILE.NAME = ''
      ENTRY.TITLE = ''
      ENTRY.DATE = ''
      ENTRY.TIME = ''
      ENTRY.SIZE = ''
      ENTRY.COPIES = ''
      RETURN


*
*
* READ ENTRY FROM FILE
*
READ.ENTRY: 
      REQUEST.FILE.NAME = REQUEST.PATH:Q.NAME:'/':'cA':FMT(Q.JOB.NUMBER,'4"0"R'):Q.NODE
      OSREAD ENTRY FROM REQUEST.FILE.NAME ELSE
         REQUEST.FILE.NAME = REQUEST.PATH:Q.NAME:'/':'cfA':FMT(Q.JOB.NUMBER,'3"0"R'):Q.NODE
         OSREAD ENTRY FROM REQUEST.FILE.NAME ELSE
            REQUEST.FILE.NAME = ''
            ENTRY = 'Jinaccessible':CHAR(10)
         END
      END
      CONVERT CHAR(10) TO @FM IN ENTRY
      RETURN



*
*
* SPLIT ENTRY
*
SPLIT.ENTRY: 
      NUM.LINES = COUNT(ENTRY,@FM)
      FOR LINE.CTR=1 TO NUM.LINES
         LINE.TYPE = ENTRY<LINE.CTR>[1,1]
         LINE.DATA = ENTRY<LINE.CTR>[2,32000]
         BEGIN CASE
            CASE LINE.TYPE = 'P'
               ENTRY.USER.NAME = LINE.DATA
            CASE LINE.TYPE = 'B'
               ENTRY.TITLE = LINE.DATA
            CASE LINE.TYPE = 'K'
               ENTRY.COPIES = LINE.DATA
            CASE LINE.TYPE = 'T'
               ENTRY.FILE.NAME = LINE.DATA
            CASE LINE.TYPE = 'F'
               ENTRY.SPOOL.NAME = REQUEST.PATH:Q.NAME:'/':LINE.DATA
GOSUB GET.FILE.INFO
         END CASE
      NEXT LINE.CTR
      RETURN


*
*
* GET FILE INFO
*
GET.FILE.INFO: 
      IF ENTRY.SPOOL.NAME = '' THEN
         RETURN
      END
      BUFFER = ''
      RESULT = CALLC c_finfo(ENTRY.SPOOL.NAME, BUFFER)
      IF RESULT THEN
         RETURN
      END
      ENTRY.SIZE = BUFFER<2>
      ENTRY.DATE = ICONV(BUFFER<5>,'D2')
      ENTRY.TIME = ICONV(BUFFER<8>,'MT')
*IF @LOGNAME = 'sjoquist' THEN
*   CRT ENTRY.SPOOL.NAME
*CRT BUFFER
*INPUT JUNK
*END
      RETURN


*
*
* BUILD ENTRY
*
BUILD.ENTRY: 
      SPQUEUE.NUM.ENTRIES += 1
      SPQUEUE.ENTRY.NUMBER.LIST<SPQUEUE.NUM.ENTRIES> = Q.JOB.NUMBER
      SPQUEUE.USER.NAME(SPQUEUE.NUM.ENTRIES) = Q.USER
      SPQUEUE.TITLE(SPQUEUE.NUM.ENTRIES) = ENTRY.TITLE
      SPQUEUE.SPOOL.NAME(SPQUEUE.NUM.ENTRIES) = ENTRY.SPOOL.NAME
      SPQUEUE.FILE.NAME(SPQUEUE.NUM.ENTRIES) = ENTRY.FILE.NAME
      SPQUEUE.DATE(SPQUEUE.NUM.ENTRIES) = ENTRY.DATE
      SPQUEUE.TIME(SPQUEUE.NUM.ENTRIES) = ENTRY.TIME
      SPQUEUE.FORM.NAME(SPQUEUE.NUM.ENTRIES) = Q.NAME
      SPQUEUE.SIZE(SPQUEUE.NUM.ENTRIES) = ENTRY.SIZE
      SPQUEUE.COPIES(SPQUEUE.NUM.ENTRIES) = ENTRY.COPIES
      RETURN




   END
